{"version":3,"sources":["reportWebVitals.js","api.js","store/actions/erabiltzaileak.js","store/actions/zuzenekoak.js","helpers/initialLoader.jsx","components/Header.jsx","components/Footer.jsx","App.jsx","cards/TwitzlariaCard.js","views/Bilatzailea.js","views/Erabiltzailea.jsx","utils.js","views/Gutarrak.jsx","config/const.js","cards/ClipCard.jsx","cards/ZuzenekoaCard.js","views/Portada.js","Routes.js","store/reducers/erabiltzaileak.js","store/reducers/zuzenekoak.js","store/reducers/index.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TwitchAPI","axios","create","baseURL","headers","secrets","client_id","Authorization","token","GetZuzenekoak","twitzlariList","a","get","join","response","data","GetErabiltzailearenBideoak","id","GetErabiltzailearenKlipak","gaur","Date","atzeraData","setDate","getDate","filter","clip","created_at","GetErabiltzaileak","users","GET_ERABILTZAILEAK_PENDING","GET_ERABILTZAILEAK_SUCCESS","GET_ERABILTZAILEAK_ERROR","GET_ZUZENEKOAK_PENDING","GET_ZUZENEKOAK_SUCCESS","GET_ZUZENEKOAK_ERROR","initialLoader","App","twitzlariak","props","dispatch","useDispatch","useEffect","type","getErabiltzaileakAPI","result","payload","items","error","children","Header","Menu","inverted","Container","Item","as","Link","to","Footer","Segment","vertical","style","margin","padding","textAlign","Grid","divided","stackable","Column","width","content","TwitzlariaCard","title","meta","description","image_url","zuzenean","Card","Content","Image","floated","size","src","Icon","circular","color","name","Meta","Description","className","Bilatzailea","useState","setUsers","options","setOptions","userList","setUserList","bideoak","setBideoak","klipak","setKlipak","selectedUser","setSelectedUser","map","twitzlaria","key","text","value","getErabiltzailearenBideoak","user_id","getErabiltzailearenKlipak","user","display_name","azkenBideoak","azkenKlipak","bideoa","klipa","length","fetchData","Dropdown","placeholder","fluid","multiple","selection","search","allowAdditions","onAddItem","event","onChange","e","columns","index","onClick","handleClick","view_count","profile_image_url","Group","thumbnail_url","replace","pathname","url","target","moment","format","Erabiltzailea","useParams","erabiltzaileak","useSelector","state","loaded","item","login","toUpperCase","userObj","wrapped","ui","extra","dynamicSort","property","sortOrder","substr","b","Gutarrak","itemsPerRow","doubling","Dimmer","active","loading","Loader","sort","substring","KLIP_ORDENAZIOA","TWITZLARI_AUKERAK","ClipCard","href","rel","Row","creator_name","role","broadcaster_name","Popup","hideOnScroll","basic","position","on","trigger","navigator","clipboard","writeText","Label","attached","ZuzenekoaCard","erabiltzailea","user_login","ribbon","user_name","game_name","viewer_count","Portada","klipakOriginala","setKlipakOriginala","filteredClipper","setFilteredClipper","slice","paginationKlipak","setPaginationKlipak","paginationOrria","setPaginationOrria","klipEgileak","setKlipEgileak","zuzenekoak","getZuzenekoakAPI","klipEgileakBerria","forEach","creator","egilea","push","prevState","icon","header","Button","toLowerCase","clipper","filter_klipak","clipperFilter","Select","irizpidea","defaultValue","includes","Math","round","Pagination","boundaryRange","defaultActivePage","showEllipsis","activePage","onPageChange","totalPages","AppRoutes","path","element","exact","initialState","erabiltzaileakReducer","action","zuzenekoakReducer","rootReducer","combineReducers","configureStore","reducer","middleware","thunk","devTools","process","createRoot","document","getElementById","render","store"],"mappings":"iaAYeA,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,iECHRQ,E,OAAYC,EAAMC,OAAO,CAC7BC,QAAS,+BACTC,QAAS,CACP,YAAaC,EAAQC,UACrBC,cAAe,UAAYF,EAAQG,SAI1BC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACJX,EAAUY,IAC/B,sBAAwBF,EAAcG,KAAK,iBAFlB,cACrBC,EADqB,yBAIpBA,EAASC,KAAKA,MAJM,2CAAH,sDAObC,EAA0B,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACjBX,EAAUY,IAAI,kBAAoBK,GADjB,cAClCH,EADkC,yBAEjCA,EAASC,KAAKA,MAFmB,2CAAH,sDAY1BG,EAAyB,uCAAG,WAAOD,GAAP,mBAAAN,EAAA,sEAChBX,EAAUY,IAC/B,wBAA0BK,EAAK,cAFM,cACjCH,EADiC,OAInCK,EAAO,IAAIC,MACXC,EAAa,IAAID,MACVE,QAAQH,EAAKI,UAAY,IANG,kBAOhCT,EAASC,KAAKA,KAAKS,QACxB,SAACC,GAAD,OAAU,IAAIL,KAAKK,EAAKC,YAAcL,MARD,2CAAH,sDAYzBM,EAAiB,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,sEACRX,EAAUY,IAAI,eAAiBgB,EAAMf,KAAK,YADlC,cACzBC,EADyB,yBAExBA,EAASC,KAAKA,MAFU,2CAAH,sDAIff,IC9CF6B,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA2B,2BCF3BC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAuB,uB,OCcrBC,EAXO,SAACC,GACrB,IAAM1B,EAAgB2B,EAAYA,YAClC,OAAO,SAACC,GACN,IAAMC,EAAWC,cAIjB,OAHAC,qBAAU,WFNmB,IAACb,EEO5BW,GFP4BX,EEODlB,EFN/B,uCAAO,WAAO6B,GAAP,eAAA5B,EAAA,6DACL4B,EAAS,CACPG,KAAMb,IAFH,SAIgBc,EAAqBf,GAJrC,OAICgB,EAJD,OAKL,IACEL,EAAS,CACPG,KAAMZ,EACNe,QAAS,CACPC,MAAOF,KAGX,MAAOG,GACPR,EAAS,CACPG,KAAMX,EACNc,QAASE,IAfR,2CAAP,0DEOK,IACI,cAACX,EAAD,2BAASE,GAAT,aAAiBA,EAAMU,c,kBCTrBC,EAAS,WACpB,OACE,cAACC,EAAA,EAAD,CAAMC,UAAQ,EAAd,SACE,eAACC,EAAA,EAAD,WACE,cAACF,EAAA,EAAKG,KAAN,CAAWC,GAAIC,IAAMC,GAAG,IAAxB,6BAGA,cAACN,EAAA,EAAKG,KAAN,CAAWC,GAAIC,IAAMC,GAAG,eAAxB,yBAGA,cAACN,EAAA,EAAKG,KAAN,CAAWC,GAAIC,IAAMC,GAAG,YAAxB,4B,2BCXKC,EAAS,WACpB,OACE,cAACC,EAAA,EAAD,CACEP,UAAQ,EACRQ,UAAQ,EACRC,MAAO,CAAEC,OAAQ,cAAeC,QAAS,WAH3C,SAKE,cAACV,EAAA,EAAD,CAAWW,UAAU,SAArB,SACE,eAACC,EAAA,EAAD,CAAMC,SAAO,EAACd,UAAQ,EAACe,WAAS,EAAhC,UACE,eAACF,EAAA,EAAKG,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,IAAD,CAAQjB,UAAQ,EAACG,GAAG,KAAKe,QAAQ,kBACjC,uHAKF,eAACL,EAAA,EAAKG,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,IAAD,CAAQjB,UAAQ,EAACG,GAAG,KAAKe,QAAQ,kBACjC,+HCLGlC,SAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,IACA,cAAC,EAAD,U,4DC8BSmC,G,OAlCQ,SAAC,GAMjB,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UAEI,IADJC,gBACI,SACJ,OACE,mCACE,eAACC,EAAA,EAAKC,QAAN,WACE,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,KAAK,OACLC,IACEP,GACA,yGAGJ,eAACE,EAAA,EAAK3B,OAAN,WACG0B,GACC,cAACO,EAAA,EAAD,CAAMC,UAAQ,EAAChC,UAAQ,EAAC6B,KAAK,OAAOI,MAAM,MAAMC,KAAK,WAEtDd,GAAS,gBAEZ,cAACK,EAAA,EAAKU,KAAN,UAAYd,EAAOA,EAAO,aAAe,gBACzC,cAACI,EAAA,EAAKW,YAAN,CAAkBC,UAAU,WAA5B,SACGf,GACC,iE,iBCoKGgB,EAjLK,SAACnD,GAAW,IAAD,EACHoD,mBAAS,IADN,mBACtB9D,EADsB,KACf+D,EADe,OAECD,mBAAS,IAFV,mBAEtBE,EAFsB,KAEbC,EAFa,OAGGH,mBAAS,IAHZ,mBAGtBI,EAHsB,KAGZC,EAHY,OAICL,mBAAS,IAJV,mBAItBM,EAJsB,KAIbC,EAJa,OAKDP,mBAAS,IALR,mBAKtBQ,EALsB,KAKdC,EALc,OAMWT,mBAAS,IANpB,mBAMtBU,EANsB,KAMRC,EANQ,KAQvB3F,EAAgB2B,EAAYA,YAAYiE,KAAI,SAACC,GACjD,MAAO,CAAEC,IAAKD,EAAYE,KAAMF,EAAYG,MAAOH,MAG/CI,EAA0B,uCAAG,WAAOC,GAAP,SAAAjG,EAAA,sEACpBK,EAA2B4F,GADP,mFAAH,sDAG1BC,EAAyB,uCAAG,WAAOD,GAAP,SAAAjG,EAAA,sEACnBO,EAA0B0F,GADP,mFAAH,sDAfF,4CAwC7B,WAA2BE,GAA3B,iBAAAnG,EAAA,0DACMmG,EADN,wBAEIT,EAAgBS,EAAKC,cACrBd,EAAW,IACXE,EAAU,IACNa,EAAe,GACfC,EAAc,GANtB,SAOiBN,EAA2BG,EAAK7F,IAPjD,+BAOsDqF,KAAI,SAACY,GACrDF,EAAY,sBAAOA,GAAP,CAAqBE,OARvC,eAUIjB,EAAWe,GAVf,UAYiBH,EAA0BC,EAAK7F,IAZhD,gCAYqDqF,KAAI,SAACa,GACpDF,EAAW,sBAAOA,GAAP,CAAoBE,OAbrC,QAeIhB,EAAUc,GAfd,6CAxC6B,sBAmB7BxE,qBAAU,YACO,uCAAG,sBAAA9B,EAAA,sDAChBmF,EAASsB,OAAS,GAChBpH,EAAUY,IACR,eAAiBkF,EAASjF,KAAK,YAC/BnB,MAAK,SAACoB,GAAD,OAAc6E,EAAS7E,EAASC,KAAKA,SAJ9B,2CAAH,qDAMfsG,KACC,CAACvB,IAEJrD,qBAAU,WACRoD,EAAWnF,GACX2F,EAAgB,MACf,IA2BH,IAAIlF,EAAO,IAAIC,KAIf,OAHiB,IAAIA,MACVE,QAAQH,EAAKI,UAAY,GAGlC,eAAC6B,EAAA,EAAD,WACE,cAACkE,EAAA,EAAD,CACEC,YAAY,iBACZC,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,QAAM,EACNC,gBAAc,EACdC,UAAW,SAACC,EAAO/G,GAAR,OACT8E,EAAW,GAAD,mBACLD,GADK,CAER,CAAEY,IAAKzF,EAAK2F,MAAOD,KAAM1F,EAAK2F,MAAOA,MAAO3F,EAAK2F,WAGrDd,QAASA,EACTmC,SA7CN,SAAsBC,EAAtB,GAAqC,IAAVtB,EAAS,EAATA,MACzBX,EAAYW,GACZT,EAAW,IACXE,EAAU,OA4CR,cAACzC,EAAA,EAAD,UACE,eAACM,EAAA,EAAD,CAAMiE,QAAS,EAAGhE,SAAO,EAAzB,UACE,cAACD,EAAA,EAAKG,OAAN,CAAaC,MAAO,EAApB,SACGxC,EAAMwF,OAAS,EACdxF,EAAM0E,KAAI,SAACQ,EAAMoB,GAAP,OACR,cAACtD,EAAA,EAAD,CACEY,UAAWY,IAAiBU,EAAKC,aAAe,SAAW,GAC3DoB,QAAS,kBAxFI,2CAwFEC,CAAYtB,IAF7B,SAIE,cAAC,EAAD,CACEvC,MAAOuC,EAAKC,aACZvC,KAAMsC,EAAKuB,WACX5D,YAAaqC,EAAKrC,YAClBC,UAAWoC,EAAKwB,mBACXJ,QAKX,cAACtD,EAAA,EAAD,UACE,cAAC,EAAD,QAIN,eAACZ,EAAA,EAAKG,OAAN,CAAaC,MAAO,EAApB,UACE,cAACV,EAAA,EAAD,UACE,eAAC,IAAD,CAAQJ,GAAG,KAAX,UACE,cAAC4B,EAAA,EAAD,CAAMF,KAAK,OAAOK,KAAK,iBACvB,cAAC,IAAOR,QAAR,2BAGJ,cAACD,EAAA,EAAK2D,MAAN,UACGvC,EAAQoB,OAAS,EAChBpB,EAAQM,KAAI,SAACY,EAAQgB,GAAT,OACV,eAACtD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CACEG,IAAKiC,EAAOsB,cACTC,QAAQ,WAAY,KACpBA,QAAQ,YAAa,OAE1B,eAAC7D,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAK3B,OAAN,CACEK,GAAIC,IACJC,GAAI,CAAEkF,SAAUxB,EAAOyB,KACvBC,OAAO,SAHT,SAKG1B,EAAO3C,QAEV,cAACK,EAAA,EAAKW,YAAN,CAAkBjC,GAAG,IAArB,SACGuF,IAAO3B,EAAOxF,YAAYoH,OAAO,+BAM1C,gEAIN,eAAC9E,EAAA,EAAKG,OAAN,CAAaC,MAAO,EAApB,UACE,cAACV,EAAA,EAAD,UACE,eAAC,IAAD,CAAQJ,GAAG,KAAX,UACE,cAAC4B,EAAA,EAAD,CAAMF,KAAK,OAAOK,KAAK,cACvB,cAAC,IAAOR,QAAR,0BAGJ,cAACD,EAAA,EAAK2D,MAAN,UACGrC,EAAOkB,OAAS,EACflB,EAAOI,KAAI,SAAC7E,EAAMyG,GAAP,OACT,eAACtD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CACEG,IAAKxD,EAAK+G,cACPC,QAAQ,WAAY,KACpBA,QAAQ,YAAa,OAE1B,eAAC7D,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAK3B,OAAN,CAAaK,GAAIC,IAAMC,GAAI,CAAEkF,SAAUjH,EAAKkH,KAA5C,SACGlH,EAAK8C,QAER,cAACK,EAAA,EAAKW,YAAN,CAAkBjC,GAAG,IAArB,SACGuF,IAAOpH,EAAKC,YAAYoH,OAAO,+BAMxC,uEC9IDC,EAvCO,SAACzG,GAAW,IAAD,EACzBwE,EAASkC,cAATlC,KACAmC,EAAiBC,aAAY,SAACC,GAAD,OAAWA,EAAMF,kBAC9CnD,EACJmD,EAAeG,QAAUH,EAAenG,MAAMsE,OAAS,EACnD6B,EAAenG,MAAMtB,QACnB,SAAC6H,GAAD,OAAUA,EAAKC,MAAMC,gBAAkBzC,EAAKyC,iBAE9C,GACAC,EAAU1D,EAASsB,OAAS,EAAItB,EAAS,GAAK,GACpD,OACE,eAAC1C,EAAA,EAAD,WACE,cAAC,IAAD,CAAQE,GAAG,KAAX,SAAiBwD,IACjB,eAAClC,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CACEG,IAAG,OAAEuE,QAAF,IAAEA,GAAF,UAAEA,EAASlB,yBAAX,aAAE,EACDG,QAAQ,WAAY,KACrBA,QAAQ,YAAa,KACxBgB,SAAO,EACPC,IAAI,IAEN,eAAC9E,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAK3B,OAAN,iBAAcuG,QAAd,IAAcA,OAAd,EAAcA,EAASzC,eACvB,cAACnC,EAAA,EAAKU,KAAN,UACE,sBAAME,UAAU,OAAhB,SACGqD,IAAM,OAACW,QAAD,IAACA,OAAD,EAACA,EAAS9H,YAAYoH,OAAO,kBAGxC,cAAClE,EAAA,EAAKW,YAAN,iBAAmBiE,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAS/E,iBAE9B,eAACG,EAAA,EAAKC,QAAN,CAAc8E,OAAK,EAAnB,UACE,cAACzE,EAAA,EAAD,CAAMG,KAAK,QADb,OAEGmE,QAFH,IAEGA,OAFH,EAEGA,EAASnB,WAFZ,uB,kBCrCR,SAASuB,EAAYC,GACnB,IAAIC,EAAY,EAKhB,MAJoB,MAAhBD,EAAS,KACXC,GAAa,EACbD,EAAWA,EAASE,OAAO,IAEtB,SAAUpJ,EAAGqJ,GAMlB,OADErJ,EAAEkJ,GAAYG,EAAEH,IAAa,EAAIlJ,EAAEkJ,GAAYG,EAAEH,GAAY,EAAI,GACnDC,GCIpB,IAkDeG,EAlDE,SAAC3H,GAChB,IAAM2G,EAAiBC,aAAY,SAACC,GAAD,OAAWA,EAAMF,kBAEpD,OACE,eAAC7F,EAAA,EAAD,WACE,cAAC,IAAD,CAAQE,GAAG,KAAX,sBACA,eAACsB,EAAA,EAAK2D,MAAN,CAAY2B,YAAa,EAAGC,UAAQ,EAApC,UACE,cAACC,EAAA,EAAD,CAAQC,OAAQpB,EAAeqB,QAASnH,UAAQ,EAAhD,SACE,cAACoH,EAAA,EAAD,2BAEDtB,EAAeG,QACdH,EAAenG,MAAM0H,KAAKZ,EAAY,iBAAiBtD,KAAI,SAACQ,GAAU,IAAD,EACnE,OACE,eAAClC,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CACEG,IAAG,OAAE6B,QAAF,IAAEA,GAAF,UAAEA,EAAMwB,yBAAR,aAAE,EACDG,QAAQ,WAAY,KACrBA,QAAQ,YAAa,KACxBgB,SAAO,EACPC,IAAI,IAEN,eAAC9E,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAK3B,OAAN,UACE,cAAC,IAAD,CAAMO,GAAE,2BAAesD,QAAf,IAAeA,OAAf,EAAeA,EAAMC,cAA7B,gBACGD,QADH,IACGA,OADH,EACGA,EAAMC,iBAGX,cAACnC,EAAA,EAAKU,KAAN,UACE,sBAAME,UAAU,OAAhB,SACGqD,IAAM,OAAC/B,QAAD,IAACA,OAAD,EAACA,EAAMpF,YAAYoH,OAAO,mBAGhC,OAAJhC,QAAI,IAAJA,OAAA,EAAAA,EAAMrC,cACL,eAACG,EAAA,EAAKW,YAAN,kBACGuB,QADH,IACGA,OADH,EACGA,EAAMrC,YAAYgG,UAAU,EAAG,IADlC,YAKJ,eAAC7F,EAAA,EAAKC,QAAN,CAAc8E,OAAK,EAAnB,UACE,cAACzE,EAAA,EAAD,CAAMG,KAAK,QADb,OAEGyB,QAFH,IAEGA,OAFH,EAEGA,EAAMuB,WAFT,6B,gDCnDHqC,GAAkB,CAC7B,CACElE,IAAK,cACLE,MAAO,cACPD,KAAM,kDAER,CACED,IAAK,aACLE,MAAO,aACPD,KAAM,mDAER,CACED,IAAK,cACLE,MAAO,cACPD,KAAM,kDAER,CACED,IAAK,mBACLE,MAAO,mBACPD,KACE,kDAEE,cAACvB,EAAA,EAAD,CAAMG,KAAK,2BAIjB,CACEmB,IAAK,oBACLE,MAAO,oBACPD,KACE,kDAEE,cAACvB,EAAA,EAAD,CAAMG,KAAK,yBAIjB,CACEmB,IAAK,eACLE,MAAO,eACPD,KACE,8CAEE,cAACvB,EAAA,EAAD,CAAMG,KAAK,2BAIjB,CACEmB,IAAK,gBACLE,MAAO,gBACPD,KACE,8CAEE,cAACvB,EAAA,EAAD,CAAMG,KAAK,0BAMNsF,GAAiB,YACzBtI,EAAYA,YAAYiE,KAAI,SAACC,GAC9B,MAAO,CACLC,IAAKD,EACLG,MAAOH,EACPE,KAAMF,O,oBC4BGqE,GAzFE,SAAC,GAAc,IAAZnJ,EAAW,EAAXA,KAClB,OACE,eAACmD,EAAA,EAAD,WACE,mBAAGiG,KAAMpJ,EAAKkH,IAAKC,OAAO,SAASkC,IAAI,aAAvC,SACE,cAAChG,EAAA,EAAD,CACEG,IAAKxD,EAAK+G,cACPC,QAAQ,WAAY,KACpBA,QAAQ,YAAa,SAG5B,eAAC7D,EAAA,EAAKC,QAAN,WACE,cAACD,EAAA,EAAK3B,OAAN,UAAcxB,EAAK8C,QACnB,cAACK,EAAA,EAAKW,YAAN,UACE,cAACvB,EAAA,EAAD,UACE,eAACA,EAAA,EAAK+G,IAAN,CAAU9C,QAAS,EAAnB,UACE,eAACjE,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAApB,UACE,gCACE,cAACc,EAAA,EAAD,CAAMG,KAAK,UACVwD,IAAOpH,EAAKC,YAAYoH,OAAO,iBAElC,gCACE,cAAC5D,EAAA,EAAD,CAAMG,KAAK,cACV5D,EAAKuJ,mBAGV,eAAChH,EAAA,EAAKG,OAAN,CAAaC,MAAO,EAApB,UACE,mBACE1B,KAAK,SACLuI,KAAK,SACL1G,MAAM,mBACNqE,OAAQ,SACRkC,IAAI,aACJD,KACE,yCAEApJ,EAAKyJ,iBAFL,OAKAzJ,EAAK8C,MACL,SACA9C,EAAKkH,IAdT,SAiBE,cAACzD,EAAA,EAAD,CAAMG,KAAK,UAAUD,MAAM,OAAOJ,KAAK,UAEzC,uBACA,cAACmG,GAAA,EAAD,CACE9G,QAAQ,kDACR+G,cAAY,EACZC,OAAK,EACLlI,UAAQ,EACRmI,SAAS,aACTC,GAAG,QACHC,QACE,cAACtG,EAAA,EAAD,CACEG,KAAK,OACLL,KAAK,MACLmD,QAAS,WACPsD,UAAUC,UAAUC,UAClB,IACElK,EAAKyJ,iBADP,MAIEzJ,EAAK8C,MACL,OACA9C,EAAKkH,oBAUzB,cAACiD,GAAA,EAAD,CAAOC,SAAS,WAAWzG,MAAM,SAAjC,SACG3D,EAAKyJ,sBAGV,cAACtG,EAAA,EAAKC,QAAN,CAAc8E,OAAK,EAAnB,SACE,gCACE,cAACzE,EAAA,EAAD,CAAMG,KAAK,QACV5D,EAAK4G,WAFR,sBCnCOyD,GA5CO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,eAACnH,EAAA,EAAD,WACE,mBACEiG,KAAM,iCAA2BkB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeC,YAChDpD,OAAO,SACPkC,IAAI,aAHN,SAKE,cAAChG,EAAA,EAAD,CACEG,KACe,OAAb8G,QAAa,IAAbA,OAAA,EAAAA,EAAevD,cACZC,QAAQ,UAAW,KACnBA,QAAQ,WAAY,OACvB,2GAIN,eAAC7D,EAAA,EAAKC,QAAN,WACE,cAAC+G,GAAA,EAAD,CAAOxG,MAAM,MAAM6G,OAAO,QAA1B,sBAGA,cAACrH,EAAA,EAAK3B,OAAN,UACE,mBACE4H,KAAM,iCAA2BkB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeC,YAChDpD,OAAO,SACPkC,IAAI,aAHN,UAKgB,OAAbiB,QAAa,IAAbA,OAAA,EAAAA,EAAeG,YAAa,iBAGjC,cAACtH,EAAA,EAAKU,KAAN,WAAyB,OAAbyG,QAAa,IAAbA,OAAA,EAAAA,EAAeI,YAAa,mBACxC,eAACvH,EAAA,EAAKW,YAAN,YACgB,OAAbwG,QAAa,IAAbA,OAAA,EAAAA,EAAexH,QACd,wDACF,gCACE,cAACW,EAAA,EAAD,CAAMG,KAAK,QACV0G,EAAcK,aAFjB,uBC2NKC,GAxOC,SAAC/J,GACf,IAAMC,EAAWC,cADQ,EAEqBkD,mBAAS,IAF9B,mBAElB4G,EAFkB,KAEDC,EAFC,OAGG7G,mBAAS,IAHZ,mBAGlBQ,EAHkB,KAGVC,EAHU,OAIqBT,mBAAS,IAJ9B,mBAIlB8G,EAJkB,KAIDC,EAJC,OAKK/G,mBAAS,IALd,mBAKlBE,EALkB,KAKTC,EALS,OAMuBH,mBAASQ,EAAOwG,MAAM,EAAG,KANhD,mBAMlBC,EANkB,KAMAC,EANA,OAOqBlH,mBAAS,GAP9B,mBAOlBmH,EAPkB,KAODC,EAPC,OAQapH,mBAAS,IARtB,mBAQlBqH,EARkB,KAQLC,EARK,KASnB/D,EAAiBC,aAAY,SAACC,GAAD,OAAWA,EAAMF,kBAC9CgE,EAAa/D,aAAY,SAACC,GAAD,OAAWA,EAAM8D,cAC1CvM,GAAgB2B,EAAYA,YAClCI,qBAAU,WbnCiB,IAACb,EaoC1BW,GbpC0BX,EaoCHlB,GbnCzB,uCAAO,WAAO6B,GAAP,eAAA5B,EAAA,6DACL4B,EAAS,CACPG,KAAMV,IAFH,SAIgBkL,EAAiBtL,GAJjC,OAICgB,EAJD,OAKL,IACEL,EAAS,CACPG,KAAMT,EACNY,QAAS,CACPC,MAAOF,KAGX,MAAOG,GACPR,EAAS,CACPG,KAAMR,EACNW,QAASE,IAfR,2CAAP,0DaoCG,IACH,IAAI5B,GAAO,IAAIC,MACE,IAAIA,MACVE,QAAQH,GAAKI,UAAY,IACpC,IAAMsF,GAAyB,uCAAG,WAAOD,GAAP,SAAAjG,EAAA,sEACnBO,EAA0B0F,GADP,mFAAH,sDAI/BnE,qBAAU,WACRmK,EACE1G,EAAOwG,MAA8B,IAAvBG,EAAkB,GAAiC,IAAvBA,EAAkB,GAAU,OAEvE,CAAC3G,EAAQ2G,IAEZpK,qBAAU,WACR,GAAIwG,EAAeG,QAAUH,EAAenG,MAAMsE,OAAS,EAAG,CAC5D,IAAM+F,EAAiB,YAAOJ,GAC9B9D,EAAenG,MAAMsK,SAAQ,SAACtG,GAC5BD,GAA0BC,EAAK7F,IAAIvB,MAAK,SAACoB,GACvCA,EAASsM,SAAQ,SAACjG,GAMD,IAJbgG,EAAkB3L,QAChB,SAAC6L,GAAD,OACEA,EAAQC,OAAO/D,gBACfpC,EAAM6D,aAAazB,iBACrBnC,OAEF+F,EAAkBI,KAAK,CACrBD,OAAQnG,EAAM6D,aACd9E,OAAQ,IAGViH,EAAkBC,SAAQ,SAACC,GAEvBA,EAAQC,OAAO/D,gBACfpC,EAAM6D,aAAazB,eAEnB8D,EAAQnH,YAKdC,GAAU,SAACqH,GAAD,MACR,sBAAIA,GAAJ,CAAerG,IAAOqD,KAAKZ,EAAY,mBAEzC2C,GAAmB,SAACiB,GAAD,MACjB,sBAAIA,GAAJ,CAAerG,IAAOqD,KAAKZ,EAAY,sBAG3CoD,EAAeG,YAIpB,CAAClE,IAsCJ,OACE,eAAC7F,EAAA,EAAD,WACE,iDACA,qBAAKoC,UAAU,qBACf,oBAAIA,UAAU,mBAAd,4BACCyH,EAAW7D,QAAU6D,EAAWnK,MAAMsE,OAAS,EAC9C,cAACxC,EAAA,EAAK2D,MAAN,CAAY2B,YAAa,EAAGC,UAAQ,EAApC,SACG8C,EAAWnK,MAAMwD,KAAI,SAACyF,EAAe7D,GAAhB,OACpB,cAAC,GAAD,CAAe6D,cAAeA,SAIlC,cAACrI,EAAA,EAAD,CAAS6D,aAAW,EAApB,SACE,eAAC,IAAD,CAAQkG,MAAI,EAAZ,UACE,cAACvI,EAAA,EAAD,CAAMG,KAAK,YADb,8CAMJ,uBACA,2DACA,eAAC3B,EAAA,EAAD,WACE,mDAaA,cAACM,EAAA,EAAD,CAAMiE,QAAS,EAAf,SACG8E,GACCA,EAAYvC,KAAKZ,EAAY,YAAYtD,KAAI,SAACgH,EAAQ9G,GAAT,OAC3C,cAACxC,EAAA,EAAKG,OAAN,UACE,cAACd,EAAA,EAAD,CACEqK,OACE,cAACC,GAAA,EAAD,CACExK,SACEqJ,EAAgBoB,gBAChBN,EAAOA,OAAOM,cAEhBxI,MAAM,SACN+C,QAAS,kBA9DP,SAAC0F,GACrB,IAAMC,EAAa,YACdxB,EAAgB9K,QACjB,SAAC2F,GAAD,OAAWA,EAAM6D,aAAa4C,gBAAkBC,EAAQD,kBAG5DnB,EAAmBoB,GACnB1H,EAAU2H,GAuDuBC,CAAcT,EAAOA,SANtC,SAQE,iCAASA,EAAOA,WAGpB7I,YAAW,UAAK6I,EAAOpH,OAAZ,mBAdGM,WAoB1B,eAAC9C,EAAA,EAAD,WACE,gDACA,cAACsK,GAAA,EAAD,CACEzG,YAAY,kBACZ3B,QAAS8E,GACT3C,SAAU,SAACC,EAAD,OAhGAiG,EAgGMvH,EAAN,EAAMA,MAAN,OAhGAuH,EAgG2BvH,EA/F3CP,EAAU,YAAID,EAAOsE,KAAKZ,EAAYqE,WACtC1B,EAAmB,YAAIrG,EAAOsE,KAAKZ,EAAYqE,OA+FzCC,aAAc,gBAEhB,uBACA,uBACA,+CAEA,cAAC5G,EAAA,EAAD,CACEC,YAAY,iBACZE,UAAQ,EACRC,WAAS,EACTC,QAAM,EACNE,UAAW,SAACC,EAAO/G,GAAR,OACT8E,EAAW,GAAD,mBACLD,GADK,CAER,CAAEY,IAAKzF,EAAK2F,MAAOD,KAAM1F,EAAK2F,MAAOA,MAAO3F,EAAK2F,WAGrDd,QAAS+E,GACT5C,SA9Ga,SAACC,EAAD,GAAmB,IAAbtB,EAAY,EAAZA,MACzB,GAAIA,EAAMU,OAAS,EAAG,CACpB,IAAM0G,EAAa,YACdxB,EAAgB9K,QAAO,SAAC2F,GAAD,OACxBT,EAAMyH,SAAShH,EAAM+D,iBAAiB0C,mBAG1CzH,EAAU2H,QACgB,IAAjBpH,EAAMU,QACfjB,EAAUmG,MAuGR,uBACA,cAACqB,GAAA,EAAD,CACErK,GAAG,IACHH,UAAQ,EACRiC,MAAM,SACNI,UAAU,aACV2C,QA/FiB,WACvBsE,EAAmB,IACnBtG,EAAUmG,IAwFN,mCAUF,cAAC5I,EAAA,EAAD,UACGiJ,EAAiBvF,OAAS,EACzB,qCACE,cAACxC,EAAA,EAAK2D,MAAN,CAAY2B,YAAa,EAAGC,UAAQ,EAApC,SACGwC,EAAiBrG,KAAI,SAAC7E,GAAD,OACpB,cAAC,GAAD,CAAUA,KAAMA,SAGnB2M,KAAKC,MAAMnI,EAAOkB,OAAS,IAAM,GAChC,cAACkH,GAAA,EAAD,CACEC,cAAe,EACfC,kBAAmB,EACnBC,cAAc,EACdC,WAAY7B,EACZ8B,aAjJiB,SAAC3G,EAAD,OAAM0G,EAAN,EAAMA,WAAN,OAC7B5B,EAAmB4B,IAiJPE,WAAYR,KAAKC,MAAMnI,EAAOkB,OAAS,SAK7C,cAAC1D,EAAA,EAAD,CAAS6D,aAAW,EAApB,SACE,eAAC,IAAD,CAAQkG,MAAI,EAAZ,UACE,cAACvI,EAAA,EAAD,CAAMG,KAAK,UADb,6C,OC/NGwJ,OAdf,WACE,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,IAAIC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,eAAeC,QAAS,cAAC,EAAD,MAC1C,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,YAAYC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,EAAD,SAEzC,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,IAAIC,QAAS,cAAC,GAAD,U,6BCd/BE,GAAe,CACnBnM,MAAO,GACPwH,SAAS,EACTlB,QAAQ,EACRrG,MAAO,MA+BMmM,GA5Be,WAAmC,IAAlC/F,EAAiC,uDAAzB8F,GAAcE,EAAW,uCAC9D,OAAQA,EAAOzM,MACb,KAAKb,EACH,OAAO,2BACFsH,GADL,IAEEmB,SAAS,EACTlB,QAAQ,IAEZ,KAAKtH,EACH,OAAO,2BACFqH,GADL,IAEErG,MAAOqM,EAAOtM,QAAQC,MACtBwH,SAAS,EACTlB,QAAQ,IAEZ,KAAKrH,EACH,OAAO,2BACFoH,GADL,IAEEpG,MAAOoM,EAAOtM,QACdyH,SAAS,EACTlB,QAAQ,IAGZ,QACE,OAAOD,IC/BP8F,GAAe,CACnBnM,MAAO,GACPwH,SAAS,EACTlB,QAAQ,EACRrG,MAAO,MA+BMqM,GA5BW,WAAmC,IAAlCjG,EAAiC,uDAAzB8F,GAAcE,EAAW,uCAC1D,OAAQA,EAAOzM,MACb,KAAKV,EACH,OAAO,2BACFmH,GADL,IAEEmB,SAAS,EACTlB,QAAQ,IAEZ,KAAKnH,EACH,OAAO,2BACFkH,GADL,IAEErG,MAAOqM,EAAOtM,QAAQC,MACtBwH,SAAS,EACTlB,QAAQ,IAEZ,KAAKlH,EACH,OAAO,2BACFiH,GADL,IAEEpG,MAAOoM,EAAOtM,QACdyH,SAAS,EACTlB,QAAQ,IAGZ,QACE,OAAOD,IC3BEkG,GALKC,aAAgB,CAClCrG,eAAgBiG,GAChBjC,WAAYmC,KCHCG,gBAAe,CAC5BC,QAASH,GACTI,WAAY,CAACC,MACbC,UAAUC,ICGCC,qBAAWC,SAASC,eAAe,SAC3CC,OACH,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SAQN1Q,K","file":"static/js/main.32d60ff7.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import secrets from './secrets.json';\n\nimport axios from 'axios';\n\nconst TwitchAPI = axios.create({\n  baseURL: 'https://api.twitch.tv/helix/',\n  headers: {\n    'client-id': secrets.client_id,\n    Authorization: 'Bearer ' + secrets.token,\n  },\n});\n\nexport const GetZuzenekoak = async (twitzlariList) => {\n  const response = await TwitchAPI.get(\n    'streams?user_login=' + twitzlariList.join('&user_login='),\n  );\n  return response.data.data;\n};\n\nexport const GetErabiltzailearenBideoak = async (id) => {\n  const response = await TwitchAPI.get('videos?user_id=' + id);\n  return response.data.data;\n};\n\n//   TwitchAPI.get('videos?user_id=' + user.id).then((response) => {\n//     response.data.data.map( (bideoa) => {\n//         new Date(bideoa.created_at)>atzeraData && (azkenBideo = [...azkenBideo, bideoa])\n//     })\n//     setBideoak(azkenBideo)\n// })\n\nexport const GetErabiltzailearenKlipak = async (id) => {\n  const response = await TwitchAPI.get(\n    'clips?broadcaster_id=' + id + '&first=100',\n  );\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 30);\n  return response.data.data.filter(\n    (clip) => new Date(clip.created_at) > atzeraData,\n  );\n};\n\nexport const GetErabiltzaileak = async (users) => {\n  const response = await TwitchAPI.get('users?login=' + users.join('&login='));\n  return response.data.data;\n};\nexport default TwitchAPI;\n","import { GetErabiltzaileak as getErabiltzaileakAPI } from '../../api';\nexport const GET_ERABILTZAILEAK_PENDING = 'GET_ERABILTZAILEAK_PENDING';\nexport const GET_ERABILTZAILEAK_SUCCESS = 'GET_ERABILTZAILEAK_SUCCESS';\nexport const GET_ERABILTZAILEAK_ERROR = 'GET_ERABILTZAILEAK_ERROR';\nexport const getErabiltzaileak = (users) => {\n  return async (dispatch) => {\n    dispatch({\n      type: GET_ERABILTZAILEAK_PENDING,\n    });\n    const result = await getErabiltzaileakAPI(users);\n    try {\n      dispatch({\n        type: GET_ERABILTZAILEAK_SUCCESS,\n        payload: {\n          items: result,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ERABILTZAILEAK_ERROR,\n        payload: error,\n      });\n      // console.error(error);\n    }\n  };\n};\n","import { GetZuzenekoak as getZuzenekoakAPI } from '../../api';\nexport const GET_ZUZENEKOAK_PENDING = 'GET_ZUZENEKOAK_PENDING';\nexport const GET_ZUZENEKOAK_SUCCESS = 'GET_ZUZENEKOAK_SUCCESS';\nexport const GET_ZUZENEKOAK_ERROR = 'GET_ZUZENEKOAK_ERROR';\nexport const getZuzenekoak = (users) => {\n  return async (dispatch) => {\n    dispatch({\n      type: GET_ZUZENEKOAK_PENDING,\n    });\n    const result = await getZuzenekoakAPI(users);\n    try {\n      dispatch({\n        type: GET_ZUZENEKOAK_SUCCESS,\n        payload: {\n          items: result,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ZUZENEKOAK_ERROR,\n        payload: error,\n      });\n      // console.error(error);\n    }\n  };\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport twitzlariak from '../config/twitzlariak.json';\nimport { getErabiltzaileak } from '../store/actions';\n\nconst initialLoader = (App) => {\n  const twitzlariList = twitzlariak.twitzlariak;\n  return (props) => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(getErabiltzaileak(twitzlariList));\n    }, []);\n    return <App {...props}>{props.children}</App>;\n  };\n};\n\nexport default initialLoader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Menu } from 'semantic-ui-react';\n\nexport const Header = () => {\n  return (\n    <Menu inverted>\n      <Container>\n        <Menu.Item as={Link} to=\"/\">\n          Hasierako orria\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/bilatzailea\">\n          Bilatzailea\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/gutarrak\">\n          Gutarrak\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n","import React from 'react';\nimport { Container, Grid, Header, Segment } from 'semantic-ui-react';\n\nexport const Footer = () => {\n  return (\n    <Segment\n      inverted\n      vertical\n      style={{ margin: '5em 0em 0em', padding: '5em 0em' }}\n    >\n      <Container textAlign=\"center\">\n        <Grid divided inverted stackable>\n          <Grid.Column width={8}>\n            <Header inverted as=\"h4\" content=\"Footer Header\" />\n            <p>\n              Extra space for a call to action inside the footer that could help\n              re-engage users.\n            </p>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header inverted as=\"h4\" content=\"Footer Header\" />\n            <p>\n              Extra space for a call to action inside the footer that could help\n              re-engage users.\n            </p>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n};\n","import React from 'react';\n// import Routes from './Routes';\nimport initialLoader from './helpers/initialLoader';\nimport { Outlet } from 'react-router-dom';\nimport { Header as AppHeader } from './components/Header';\nimport { Footer as AppFooter } from './components/Footer';\nfunction App() {\n  return (\n    <>\n      <AppHeader />\n      <Outlet />\n      <AppFooter />\n    </>\n  );\n}\n\nexport default initialLoader(App);\n","import './twitzlariakCard.css';\n\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport React from 'react';\n\n// import api from '../api.js';\n\nconst TwitzlariaCard = ({\n  title,\n  meta,\n  description,\n  image_url,\n  zuzenean = false,\n}) => {\n  return (\n    <>\n      <Card.Content>\n        <Image\n          floated=\"left\"\n          size=\"tiny\"\n          src={\n            image_url ||\n            'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'\n          }\n        />\n        <Card.Header>\n          {zuzenean && (\n            <Icon circular inverted size=\"tiny\" color=\"red\" name=\"record\" />\n          )}\n          {title || 'Twitzlaria'}\n        </Card.Header>\n        <Card.Meta>{meta ? meta + ' ikustaldi' : '0 ikustaldi'}</Card.Meta>\n        <Card.Description className=\"ellipsis\">\n          {description ||\n            'twitzlariaren deskribapena hemen idatzita agertuko da'}\n        </Card.Description>\n      </Card.Content>\n    </>\n  );\n};\n\nexport default TwitzlariaCard;\n","import {\n  Card,\n  Container,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react';\nimport React, { useEffect, useState } from 'react';\nimport TwitchAPI, {\n  GetErabiltzailearenBideoak,\n  GetErabiltzailearenKlipak,\n} from '../api.js';\n\nimport { Link } from 'react-router-dom';\nimport TwitzlariaCard from '../cards/TwitzlariaCard';\nimport moment from 'moment';\nimport twitzlariak from '../config/twitzlariak.json';\n\nconst Bilatzailea = (props) => {\n  const [users, setUsers] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [bideoak, setBideoak] = useState([]);\n  const [klipak, setKlipak] = useState([]);\n  const [selectedUser, setSelectedUser] = useState([]);\n  // const [atzeraData, setAtzeraData] = useState(new Date())\n  const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria) => {\n    return { key: twitzlaria, text: twitzlaria, value: twitzlaria };\n  });\n\n  const getErabiltzailearenBideoak = async (user_id) => {\n    return await GetErabiltzailearenBideoak(user_id);\n  };\n  const getErabiltzailearenKlipak = async (user_id) => {\n    return await GetErabiltzailearenKlipak(user_id);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      userList.length > 0 &&\n        TwitchAPI.get(\n          'users?login=' + userList.join('&login='),\n        ).then((response) => setUsers(response.data.data));\n    };\n    fetchData();\n  }, [userList]);\n\n  useEffect(() => {\n    setOptions(twitzlariList);\n    setSelectedUser('');\n  }, []);\n\n  function handleChange(e, { value }) {\n    setUserList(value);\n    setBideoak([]);\n    setKlipak([]);\n  }\n\n  async function handleClick(user) {\n    if (user) {\n      setSelectedUser(user.display_name);\n      setBideoak([]);\n      setKlipak([]);\n      let azkenBideoak = [];\n      let azkenKlipak = [];\n      await (await getErabiltzailearenBideoak(user.id)).map((bideoa) => {\n        azkenBideoak = [...azkenBideoak, bideoa];\n      });\n      setBideoak(azkenBideoak);\n\n      await (await getErabiltzailearenKlipak(user.id)).map((klipa) => {\n        azkenKlipak = [...azkenKlipak, klipa];\n      });\n      setKlipak(azkenKlipak);\n    }\n  }\n\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 7);\n\n  return (\n    <Container>\n      <Dropdown\n        placeholder=\"Erabiltzaileak\"\n        fluid\n        multiple\n        selection\n        search\n        allowAdditions\n        onAddItem={(event, data) =>\n          setOptions([\n            ...options,\n            { key: data.value, text: data.value, value: data.value },\n          ])\n        }\n        options={options}\n        onChange={handleChange}\n      />\n      <Segment>\n        <Grid columns={2} divided>\n          <Grid.Column width={5}>\n            {users.length > 0 ? (\n              users.map((user, index) => (\n                <Card\n                  className={selectedUser === user.display_name ? 'active' : ''}\n                  onClick={() => handleClick(user)}\n                >\n                  <TwitzlariaCard\n                    title={user.display_name}\n                    meta={user.view_count}\n                    description={user.description}\n                    image_url={user.profile_image_url}\n                    key={index}\n                  />\n                </Card>\n              ))\n            ) : (\n              <Card>\n                <TwitzlariaCard />\n              </Card>\n            )}\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon size=\"tiny\" name=\"video camera\" />\n                <Header.Content>Bideoak</Header.Content>\n              </Header>\n            </Segment>\n            <Card.Group>\n              {bideoak.length > 0 ? (\n                bideoak.map((bideoa, index) => (\n                  <Card>\n                    <Image\n                      src={bideoa.thumbnail_url\n                        .replace('%{width}', 440)\n                        .replace('%{height}', 228)}\n                    />\n                    <Card.Content>\n                      <Card.Header\n                        as={Link}\n                        to={{ pathname: bideoa.url }}\n                        target=\"_blank\"\n                      >\n                        {bideoa.title}\n                      </Card.Header>\n                      <Card.Description as=\"a\">\n                        {moment(bideoa.created_at).format('YYYY/MM/DD HH:MM')}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))\n              ) : (\n                <>Ez dago bideorik...</>\n              )}\n            </Card.Group>\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon size=\"tiny\" name=\"paperclip\" />\n                <Header.Content>klipak</Header.Content>\n              </Header>\n            </Segment>\n            <Card.Group>\n              {klipak.length > 0 ? (\n                klipak.map((clip, index) => (\n                  <Card>\n                    <Image\n                      src={clip.thumbnail_url\n                        .replace('%{width}', 440)\n                        .replace('%{height}', 228)}\n                    />\n                    <Card.Content>\n                      <Card.Header as={Link} to={{ pathname: clip.url }}>\n                        {clip.title}\n                      </Card.Header>\n                      <Card.Description as=\"a\">\n                        {moment(clip.created_at).format('YYYY/MM/DD HH:MM')}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))\n              ) : (\n                <>Ez dago klipik...</>\n              )}\n            </Card.Group>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Bilatzailea;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Card, Container, Header, Icon, Image } from 'semantic-ui-react';\n\nimport moment from 'moment';\n\nconst Erabiltzailea = (props) => {\n  let { user } = useParams();\n  const erabiltzaileak = useSelector((state) => state.erabiltzaileak);\n  const userList =\n    erabiltzaileak.loaded && erabiltzaileak.items.length > 0\n      ? erabiltzaileak.items.filter(\n          (item) => item.login.toUpperCase() === user.toUpperCase(),\n        )\n      : {};\n  const userObj = userList.length > 0 ? userList[0] : {};\n  return (\n    <Container>\n      <Header as=\"h1\">{user}</Header>\n      <Card>\n        <Image\n          src={userObj?.profile_image_url\n            ?.replace('%{width}', 440)\n            .replace('%{height}', 228)}\n          wrapped\n          ui={false}\n        />\n        <Card.Content>\n          <Card.Header>{userObj?.display_name}</Card.Header>\n          <Card.Meta>\n            <span className=\"date\">\n              {moment(userObj?.created_at).format('YYYY/MM/DD')}\n            </span>\n          </Card.Meta>\n          <Card.Description>{userObj?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name=\"eye\" />\n          {userObj?.view_count} ikustaldi\n        </Card.Content>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Erabiltzailea;\n","function dynamicSort(property) {\n  var sortOrder = 1;\n  if (property[0] === '-') {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n  return function (a, b) {\n    /* next line works with strings and numbers,\n     * and you may want to customize it to your needs\n     */\n    var result =\n      a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n\nexport { dynamicSort };\n","import {\n  Card,\n  Container,\n  Header,\n  Icon,\n  Image,\n  Loader,\n  Dimmer,\n} from 'semantic-ui-react';\nimport React from 'react';\n\nimport { dynamicSort } from '../utils.js';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst Gutarrak = (props) => {\n  const erabiltzaileak = useSelector((state) => state.erabiltzaileak);\n\n  return (\n    <Container>\n      <Header as=\"h1\">Gutarrak</Header>\n      <Card.Group itemsPerRow={6} doubling>\n        <Dimmer active={erabiltzaileak.loading} inverted>\n          <Loader>Bagatoz...</Loader>\n        </Dimmer>\n        {erabiltzaileak.loaded &&\n          erabiltzaileak.items.sort(dynamicSort('display_name')).map((user) => {\n            return (\n              <Card>\n                <Image\n                  src={user?.profile_image_url\n                    ?.replace('%{width}', 440)\n                    .replace('%{height}', 228)}\n                  wrapped\n                  ui={false}\n                />\n                <Card.Content>\n                  <Card.Header>\n                    <Link to={`/gutarrak/${user?.display_name}`}>\n                      {user?.display_name}\n                    </Link>\n                  </Card.Header>\n                  <Card.Meta>\n                    <span className=\"date\">\n                      {moment(user?.created_at).format('YYYY/MM/DD')}\n                    </span>\n                  </Card.Meta>\n                  {user?.description && (\n                    <Card.Description>\n                      {user?.description.substring(0, 55)}...\n                    </Card.Description>\n                  )}\n                </Card.Content>\n                <Card.Content extra>\n                  <Icon name=\"eye\" />\n                  {user?.view_count} ikustaldi\n                </Card.Content>\n              </Card>\n            );\n          })}\n      </Card.Group>\n    </Container>\n  );\n};\n\nexport default Gutarrak;\n","import { Icon } from 'semantic-ui-react';\nimport React from 'react';\nimport twitzlariak from './twitzlariak.json';\nexport const KLIP_ORDENAZIOA = [\n  {\n    key: '-created_at',\n    value: '-created_at',\n    text: <>Berrienak</>,\n  },\n  {\n    key: 'created_at',\n    value: 'created_at',\n    text: <>Zaharrenak</>,\n  },\n  {\n    key: '-view_count',\n    value: '-view_count',\n    text: <>Ikusienak</>,\n  },\n  {\n    key: 'broadcaster_name',\n    value: 'broadcaster_name',\n    text: (\n      <>\n        Streamerra\n        <Icon name=\"sort alphabet down\" />\n      </>\n    ),\n  },\n  {\n    key: '-broadcaster_name',\n    value: '-broadcaster_name',\n    text: (\n      <>\n        Streamerra\n        <Icon name=\"sort alphabet up\" />\n      </>\n    ),\n  },\n  {\n    key: 'creator_name',\n    value: 'creator_name',\n    text: (\n      <>\n        Egilea\n        <Icon name=\"sort alphabet down\" />\n      </>\n    ),\n  },\n  {\n    key: '-creator_name',\n    value: '-creator_name',\n    text: (\n      <>\n        Egilea\n        <Icon name=\"sort alphabet up\" />\n      </>\n    ),\n  },\n];\n\nexport const TWITZLARI_AUKERAK = [\n  ...twitzlariak.twitzlariak.map((twitzlaria) => {\n    return {\n      key: twitzlaria,\n      value: twitzlaria,\n      text: twitzlaria,\n    };\n  }),\n];\n","import { Card, Grid, Icon, Image, Label, Popup } from 'semantic-ui-react';\n\nimport React from 'react';\nimport moment from 'moment';\n\nconst ClipCard = ({ clip }) => {\n  return (\n    <Card>\n      <a href={clip.url} target=\"_blank\" rel=\"noreferrer\">\n        <Image\n          src={clip.thumbnail_url\n            .replace('%{width}', 440)\n            .replace('%{height}', 228)}\n        />\n      </a>\n      <Card.Content>\n        <Card.Header>{clip.title}</Card.Header>\n        <Card.Description>\n          <Grid>\n            <Grid.Row columns={2}>\n              <Grid.Column width={12}>\n                <div>\n                  <Icon name=\"clock\" />\n                  {moment(clip.created_at).format('YYYY/MM/DD')}\n                </div>\n                <div>\n                  <Icon name=\"paperclip\" />\n                  {clip.creator_name}\n                </div>\n              </Grid.Column>\n              <Grid.Column width={4}>\n                <a\n                  type=\"button\"\n                  role=\"button\"\n                  title=\"Share on twitter\"\n                  target={'_blank'}\n                  rel=\"noreferrer\"\n                  href={\n                    'https://twitter.com/intent/tweet?url=' +\n                    '[' +\n                    clip.broadcaster_name +\n                    ']' +\n                    '%0A' +\n                    clip.title +\n                    '%0A%0A' +\n                    clip.url\n                  }\n                >\n                  <Icon name=\"twitter\" color=\"blue\" size=\"big\" />\n                </a>\n                <br />\n                <Popup\n                  content=\"Arbelean kopiatu da zure sareetan partekatzeko!\"\n                  hideOnScroll\n                  basic\n                  inverted\n                  position=\"top center\"\n                  on=\"click\"\n                  trigger={\n                    <Icon\n                      name=\"copy\"\n                      size=\"big\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          '[' +\n                            clip.broadcaster_name +\n                            ']' +\n                            '\\n' +\n                            clip.title +\n                            '\\n\\n' +\n                            clip.url,\n                        );\n                      }}\n                    />\n                  }\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Card.Description>\n        <Label attached=\"top left\" color=\"violet\">\n          {clip.broadcaster_name}\n        </Label>\n      </Card.Content>\n      <Card.Content extra>\n        <div>\n          <Icon name=\"eye\" />\n          {clip.view_count} ikustaldi\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ClipCard;\n","import { Card, Image, Label, Icon } from 'semantic-ui-react';\n\nimport React from 'react';\n\n// import './twitzlariakCard.css'\n\nconst ZuzenekoaCard = ({ erabiltzailea }) => {\n  return (\n    <Card>\n      <a\n        href={'https://www.twitch.tv/' + erabiltzailea?.user_login}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Image\n          src={\n            erabiltzailea?.thumbnail_url\n              .replace('{width}', 440)\n              .replace('{height}', 228) ||\n            'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'\n          }\n        />\n      </a>\n      <Card.Content>\n        <Label color=\"red\" ribbon=\"right\">\n          Zuzenean\n        </Label>\n        <Card.Header>\n          <a\n            href={'https://www.twitch.tv/' + erabiltzailea?.user_login}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {erabiltzailea?.user_name || 'Twitzlaria'}\n          </a>\n        </Card.Header>\n        <Card.Meta>{erabiltzailea?.game_name || 'Jokoaren izena'}</Card.Meta>\n        <Card.Description>\n          {erabiltzailea?.title ||\n            'twitzlariaren deskribapena hemen idatzita agertuko da'}\n          <div>\n            <Icon name=\"eye\" />\n            {erabiltzailea.viewer_count} ikusle\n          </div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ZuzenekoaCard;\n","import './portada.css';\n\nimport {\n  Card,\n  Container,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Button,\n  Pagination,\n  Segment,\n  Select,\n  Item,\n} from 'semantic-ui-react';\nimport { GetErabiltzailearenKlipak } from '../api.js';\nimport { KLIP_ORDENAZIOA, TWITZLARI_AUKERAK } from '../config/const';\nimport React, { useEffect, useState } from 'react';\n\nimport ClipCard from '../cards/ClipCard';\nimport ZuzenekoaCard from '../cards/ZuzenekoaCard';\nimport { dynamicSort } from '../utils';\nimport twitzlariak from '../config/twitzlariak.json';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getZuzenekoak } from '../store/actions';\n\nconst Portada = (props) => {\n  const dispatch = useDispatch();\n  const [klipakOriginala, setKlipakOriginala] = useState([]);\n  const [klipak, setKlipak] = useState([]);\n  const [filteredClipper, setFilteredClipper] = useState('');\n  const [options, setOptions] = useState([]);\n  const [paginationKlipak, setPaginationKlipak] = useState(klipak.slice(0, 12));\n  const [paginationOrria, setPaginationOrria] = useState(1);\n  const [klipEgileak, setKlipEgileak] = useState([]);\n  const erabiltzaileak = useSelector((state) => state.erabiltzaileak);\n  const zuzenekoak = useSelector((state) => state.zuzenekoak);\n  const twitzlariList = twitzlariak.twitzlariak;\n  useEffect(() => {\n    dispatch(getZuzenekoak(twitzlariList));\n  }, []);\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 30);\n  const getErabiltzailearenKlipak = async (user_id) => {\n    return await GetErabiltzailearenKlipak(user_id);\n  };\n\n  useEffect(() => {\n    setPaginationKlipak(\n      klipak.slice((paginationOrria - 1) * 12, (paginationOrria - 1) * 12 + 12),\n    );\n  }, [klipak, paginationOrria]);\n\n  useEffect(() => {\n    if (erabiltzaileak.loaded && erabiltzaileak.items.length > 0) {\n      const klipEgileakBerria = [...klipEgileak];\n      erabiltzaileak.items.forEach((user) => {\n        getErabiltzailearenKlipak(user.id).then((response) => {\n          response.forEach((klipa) => {\n            if (\n              klipEgileakBerria.filter(\n                (creator) =>\n                  creator.egilea.toUpperCase() ===\n                  klipa.creator_name.toUpperCase(),\n              ).length === 0\n            ) {\n              klipEgileakBerria.push({\n                egilea: klipa.creator_name,\n                klipak: 1,\n              });\n            } else {\n              klipEgileakBerria.forEach((creator) => {\n                if (\n                  creator.egilea.toUpperCase() ===\n                  klipa.creator_name.toUpperCase()\n                ) {\n                  creator.klipak++;\n                }\n              });\n            }\n\n            setKlipak((prevState) =>\n              [...prevState, klipa].sort(dynamicSort('-created_at')),\n            );\n            setKlipakOriginala((prevState) =>\n              [...prevState, klipa].sort(dynamicSort('-created_at')),\n            );\n          });\n          setKlipEgileak(klipEgileakBerria);\n        });\n      });\n    }\n  }, [erabiltzaileak]);\n\n  const handlePaginationChange = (e, { activePage }) =>\n    setPaginationOrria(activePage);\n\n  const ordenatu = (irizpidea) => {\n    setKlipak([...klipak.sort(dynamicSort(irizpidea))]);\n    setKlipakOriginala([...klipak.sort(dynamicSort(irizpidea))]);\n  };\n\n  const handleChange = (e, { value }) => {\n    if (value.length > 0) {\n      const filter_klipak = [\n        ...klipakOriginala.filter((klipa) =>\n          value.includes(klipa.broadcaster_name.toLowerCase()),\n        ),\n      ];\n      setKlipak(filter_klipak);\n    } else if (value.length === 0) {\n      setKlipak(klipakOriginala);\n    }\n  };\n\n  const clipperFilter = (clipper) => {\n    const filter_klipak = [\n      ...klipakOriginala.filter(\n        (klipa) => klipa.creator_name.toLowerCase() === clipper.toLowerCase(),\n      ),\n    ];\n    setFilteredClipper(clipper);\n    setKlipak(filter_klipak);\n  };\n\n  const clearClipFilters = () => {\n    setFilteredClipper('');\n    setKlipak(klipakOriginala);\n  };\n\n  return (\n    <Container>\n      <h1>Hasierako orria</h1>\n      <div className=\"pulsating-circle\"></div>\n      <h2 className=\"pulsating-circle\">Orain zuzenean</h2>\n      {zuzenekoak.loaded && zuzenekoak.items.length > 0 ? (\n        <Card.Group itemsPerRow={3} doubling>\n          {zuzenekoak.items.map((erabiltzailea, index) => (\n            <ZuzenekoaCard erabiltzailea={erabiltzailea} />\n          ))}\n        </Card.Group>\n      ) : (\n        <Segment placeholder>\n          <Header icon>\n            <Icon name=\"history\" />\n            Orain momentuan ez dago inor zuzenean.\n          </Header>\n        </Segment>\n      )}\n      <hr />\n      <h2>Azken 30 egunetako klipak</h2>\n      <Segment>\n        <h3>Klipari ekinenak:</h3>\n\n        {/* <List divided horizontal>\n          {klipEgileak &&\n            klipEgileak.sort(dynamicSort('-klipak')).map((egilea) => (\n              <List.Item>\n                <List.Content>\n                  <List.Header>{egilea.egilea}</List.Header>\n                  <List.Description>{egilea.klipak} klip</List.Description>\n                </List.Content>\n              </List.Item>\n            ))}\n        </List> */}\n        <Grid columns={5}>\n          {klipEgileak &&\n            klipEgileak.sort(dynamicSort('-klipak')).map((egilea, key) => (\n              <Grid.Column key={key}>\n                <Item\n                  header={\n                    <Button\n                      inverted={\n                        filteredClipper.toLowerCase() !==\n                        egilea.egilea.toLowerCase()\n                      }\n                      color=\"violet\"\n                      onClick={() => clipperFilter(egilea.egilea)}\n                    >\n                      <strong>{egilea.egilea}</strong>\n                    </Button>\n                  }\n                  description={`${egilea.klipak} klip eginda`}\n                ></Item>\n              </Grid.Column>\n            ))}\n        </Grid>\n      </Segment>\n      <Segment>\n        <strong>Ordenatu: </strong>\n        <Select\n          placeholder=\"Ordenatu klipak\"\n          options={KLIP_ORDENAZIOA}\n          onChange={(e, { value }) => ordenatu(value)}\n          defaultValue={'-created_at'}\n        />\n        <br />\n        <br />\n        <strong>Iragazi: </strong>\n\n        <Dropdown\n          placeholder=\"Erabiltzaileak\"\n          multiple\n          selection\n          search\n          onAddItem={(event, data) =>\n            setOptions([\n              ...options,\n              { key: data.value, text: data.value, value: data.value },\n            ])\n          }\n          options={TWITZLARI_AUKERAK}\n          onChange={handleChange}\n        />\n        <br />\n        <Button\n          as=\"a\"\n          inverted\n          color=\"violet\"\n          className=\"link-style\"\n          onClick={clearClipFilters}\n        >\n          Garbitu iragazkiak\n        </Button>\n      </Segment>\n      <Segment>\n        {paginationKlipak.length > 0 ? (\n          <>\n            <Card.Group itemsPerRow={4} doubling>\n              {paginationKlipak.map((clip) => (\n                <ClipCard clip={clip} />\n              ))}\n            </Card.Group>\n            {Math.round(klipak.length / 12) > 1 && (\n              <Pagination\n                boundaryRange={1}\n                defaultActivePage={1}\n                showEllipsis={true}\n                activePage={paginationOrria}\n                onPageChange={handlePaginationChange}\n                totalPages={Math.round(klipak.length / 12)}\n              />\n            )}\n          </>\n        ) : (\n          <Segment placeholder>\n            <Header icon>\n              <Icon name=\"video\" />\n              Ez dago bilaketa horrekin ezer.\n            </Header>\n          </Segment>\n        )}\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Portada;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport App from './App';\nimport './App.css';\nimport { Bilatzailea, Erabiltzailea, Gutarrak, Portada } from './views';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n// import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction AppRoutes() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route exact path=\"/\" element={<Portada />}></Route>\n        <Route exact path=\"/bilatzailea\" element={<Bilatzailea />}></Route>\n        <Route exact path=\"/gutarrak\" element={<Gutarrak />}></Route>\n        <Route path=\"/gutarrak/:user\" element={<Erabiltzailea />}></Route>\n      </Route>\n      <Route exact path=\"/\" element={<Portada />}></Route>\n    </Routes>\n  );\n}\n\nexport default AppRoutes;\n","import {\n  GET_ERABILTZAILEAK_PENDING,\n  GET_ERABILTZAILEAK_SUCCESS,\n  GET_ERABILTZAILEAK_ERROR,\n} from '../actions/erabiltzaileak';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nconst erabiltzaileakReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERABILTZAILEAK_PENDING:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    case GET_ERABILTZAILEAK_SUCCESS:\n      return {\n        ...state,\n        items: action.payload.items,\n        loading: false,\n        loaded: true,\n      };\n    case GET_ERABILTZAILEAK_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        loaded: false,\n      };\n    // Default case\n    default:\n      return state;\n  }\n};\n\nexport default erabiltzaileakReducer;\n","import {\n  GET_ZUZENEKOAK_PENDING,\n  GET_ZUZENEKOAK_SUCCESS,\n  GET_ZUZENEKOAK_ERROR,\n} from '../actions/zuzenekoak';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nconst zuzenekoakReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ZUZENEKOAK_PENDING:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    case GET_ZUZENEKOAK_SUCCESS:\n      return {\n        ...state,\n        items: action.payload.items,\n        loading: false,\n        loaded: true,\n      };\n    case GET_ZUZENEKOAK_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        loaded: false,\n      };\n    // Default case\n    default:\n      return state;\n  }\n};\n\nexport default zuzenekoakReducer;\n","import { combineReducers } from 'redux';\n\nimport erabiltzaileakReducer from './erabiltzaileak';\nimport zuzenekoakReducer from './zuzenekoak';\n\nconst rootReducer = combineReducers({\n  erabiltzaileak: erabiltzaileakReducer,\n  zuzenekoak: zuzenekoakReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default configureStore({\n  reducer: rootReducer,\n  middleware: [thunk],\n  devTools: process.env.NODE_ENV !== 'production',\n});\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppRoutes from './Routes';\nimport store from './store';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <AppRoutes />\n    </BrowserRouter>\n  </Provider>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}