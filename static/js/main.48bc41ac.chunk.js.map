{"version":3,"sources":["App.js","Bilatzailea.js","Zuzenean.js","Portada.js","reportWebVitals.js","index.js","api.js","TwitzlariaCard.js"],"names":["App","console","log","process","basename","inverted","Item","as","Link","to","header","circular","size","color","name","exact","path","Bilatzailea","props","useState","users","setUsers","options","setOptions","userList","setUserList","bideoak","setBideoak","clipak","setClipak","selectedUser","setSelectedUser","twitzlariList","twitzlariak","map","twitzlaria","key","text","value","useEffect","a","length","api","get","join","then","response","data","fetchData","gaur","Date","atzeraData","setDate","getDate","placeholder","fluid","multiple","selection","search","allowAdditions","onAddItem","event","onChange","e","columns","divided","Column","width","user","index","className","display_name","onClick","azkenBideo","azkenClip","id","bideoa","created_at","clipa","handleClick","title","meta","view_count","description","image_url","profile_image_url","Content","Group","src","thumbnail_url","replace","Header","pathname","url","target","Description","moment","format","clip","Zuzenean","lives","setLives","style","margin","ribbon","user_name","Meta","game_name","floated","Portada","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","create","baseURL","headers","secrets","client_id","token","TwitzlariaCard","zuzenean"],"mappings":"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","file":"static/js/main.48bc41ac.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Menu, Icon } from 'semantic-ui-react';\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport Bilatzailea from './Bilatzailea';\nimport Zuzenean from './Zuzenean';\nimport Portada from './Portada';\nfunction App() {\n  console.log(\"PROCESS: \", process)\n  return (\n    <Router basename={'/'}>\n      <Menu inverted>\n        <Container>\n        <Menu.Item as={Link} to='/'>\n            Portada\n          </Menu.Item>\n          <Menu.Item as={Link} to='/bilatzailea'>\n            Bilatzailea\n          </Menu.Item>\n          <Menu.Item as={Link} to='/zuzenean' header>\n            <Icon circular inverted size='tiny' color='red' name='record' />\n              Zuzenean\n          </Menu.Item>\n        </Container>\n      </Menu>\n      <Switch>\n        <Route exact path=\"/\">\n          <Portada />\n        </Route>\n        <Route exact path=\"/bilatzailea\">\n          <Bilatzailea />\n        </Route>\n        <Route exact path=\"/zuzenean\">\n          <Zuzenean />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\n\nimport api from './api.js';\nimport { Container, Segment, Grid, Card, Image, Dropdown, Header, Icon } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport TwitzlariaCard from './TwitzlariaCard';\nimport twitzlariak from './twitzlariak.json';\nimport moment from \"moment\";\n\nconst Bilatzailea = ((props) => {\n    const [users, setUsers] = useState([])\n    const [options, setOptions] = useState([])\n    const [userList, setUserList] = useState([])\n    const [bideoak, setBideoak] = useState([])\n    const [clipak, setClipak] = useState([])\n    const [selectedUser, setSelectedUser] = useState([])\n    // const [atzeraData, setAtzeraData] = useState(new Date())\n    const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria)=>{return {key: twitzlaria, text: twitzlaria, value: twitzlaria}})\n    useEffect(() => {\n      const fetchData = async () => {\n        userList.length > 0 && (\n          api.get('users?login=' + userList.join('&login=')).then((response) => (\n            setUsers(response.data.data)\n          ))\n        )\n      }\n      fetchData()\n    }, [userList])\n    useEffect(() => {\n        setOptions(twitzlariList)\n      setSelectedUser('')\n    }, [])\n  \n    function handleChange(e, { value }) {\n      setUserList(value)\n      setBideoak([])\n      setClipak([])\n    }\n  \n    function handleClick(user) {\n      if (user) {\n        setSelectedUser(user.display_name)\n        setBideoak([])\n        setClipak([])\n        let azkenBideo = []\n        let azkenClip = []\n        api.get('videos?user_id=' + user.id).then((response) => {\n            response.data.data.map( (bideoa) => {\n                new Date(bideoa.created_at)>atzeraData && (azkenBideo = [...azkenBideo, bideoa])\n            })\n            setBideoak(azkenBideo)\n        })\n\n        api.get('clips?broadcaster_id=' + user.id).then((response) => {\n            response.data.data.map((clipa) => {\n                new Date(clipa.created_at)>atzeraData &&  (azkenClip = [...azkenClip, clipa])\n            })\n            setClipak(azkenClip)\n        })\n      }\n    };\n\n    let gaur = new Date()\n    let atzeraData = new Date()\n    atzeraData.setDate(gaur.getDate()-900)\n    \n    return(\n        <Container>\n            <Dropdown placeholder='Erabiltzaileak' fluid multiple selection search allowAdditions\n                onAddItem={(event, data) => setOptions([...options,\n                { key: data.value, text: data.value, value: data.value }])}\n                options={options}\n                onChange={handleChange} />\n            <Segment>\n                <Grid columns={2} divided>\n                <Grid.Column width={5}>\n                    {users.length > 0 ? (\n                    users.map((user, index) => (\n                        <Card className={selectedUser === user.display_name ? 'active': ''} onClick={() => handleClick(user)}>\n                        <TwitzlariaCard \n                            title={user.display_name} \n                            meta={user.view_count} \n                            description={user.description} \n                            image_url={user.profile_image_url} \n                            key={index} />\n                        </Card>\n                    ))\n                    ) : (\n                    <Card>\n                        <TwitzlariaCard />\n                    </Card>\n                    )\n                    }\n                </Grid.Column>\n                <Grid.Column width={5}>\n                {bideoak.length > 0 && \n                    <Segment>\n                        <Header as='h2'>\n                            <Icon  size='tiny' name='video camera' />\n                            <Header.Content>Bideoak</Header.Content>\n                        </Header>\n                    </Segment>\n                }\n                    <Card.Group>\n                    {bideoak.length > 0 ? (\n                        bideoak.map((bideoa, index) => (\n                            <>\n                        {new Date(bideoa.created_at)>atzeraData && \n                            <Card>\n                            <Image src={bideoa.thumbnail_url.replace('%{width}', 440).replace('%{height}', 228)} />\n                            <Card.Content>\n                                <Card.Header as={Link} to={{ pathname: bideoa.url }} target='_blank'>{bideoa.title}</Card.Header>\n                                <Card.Description as='a'>{moment(bideoa.created_at).format('YYYY/MM/DD HH:MM')}</Card.Description>\n                            </Card.Content>\n                            </Card>\n                        }\n                        </>\n                        ))\n                    ) : (\n                        <>\n                        </>\n                    )\n                    }\n                    </Card.Group>\n                </Grid.Column>\n                <Grid.Column width={5}>\n                    {clipak.length > 0 && \n                    <Segment>\n                        <Header as='h2'>\n                            <Icon  size='tiny' name='paperclip' />\n                            <Header.Content>Clipak</Header.Content>\n                        </Header>\n                    </Segment>\n                    }\n                    <Card.Group>\n                    {clipak.length > 0 ? (\n                        clipak.map((clip, index) => (\n                        <>\n                        {new Date(clip.created_at)>atzeraData && \n                            <Card>\n                            <Image src={clip.thumbnail_url.replace('%{width}', 440).replace('%{height}', 228)} />\n                            <Card.Content>\n                                <Card.Header as={Link} to={{ pathname: clip.url }}>{clip.title}</Card.Header>\n                                <Card.Description as='a'>{moment(clip.created_at).format('YYYY/MM/DD HH:MM')}</Card.Description>\n                            </Card.Content>\n                            </Card>\n                        }\n                        </>\n                        ))\n                    ) : (\n                        <>\n\n                        </>\n                    )\n                    }\n                    </Card.Group>\n                </Grid.Column>\n\n                </Grid>\n            </Segment>\n        </Container>\n    )\n})\n\nexport default Bilatzailea;","import React, { useState, useEffect } from 'react';\n\nimport TwitzlariaCard from './TwitzlariaCard';\nimport { Container, Menu, Icon, Segment, Grid, Card, Image, Dropdown, Label } from 'semantic-ui-react';\nimport api from './api.js';\nimport twitzlariak from './twitzlariak.json';\n\n\nconst Zuzenean = ((props) => {\n    const [lives, setLives] = useState([])\n    const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria)=>{return twitzlaria})\n    useEffect(() => {\n        api.get('streams?user_login=' + twitzlariList.join('&user_login=')).then((response) => (\n            // console.log(response.data.data)\n            setLives(response.data.data)\n        ))\n    }, []);\n    return (\n        <Container style={{ margin: 20 }}>\n            <Segment>\n                <Card.Group>\n                    {lives.length > 0 ? (\n                        lives.map((user, index) => (\n                            <>\n                                {console.log(user)}\n                                <Card >\n                                        <Image\n                                            src={user?.thumbnail_url.replace('{width}', 440).replace('{height}', 228) || 'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n                                        />\n                                    <Card.Content>\n                                        <Label color='red' ribbon='right'>\n                                            Zuzenean\n                                        </Label>\n                                        <Card.Header>\n                                            {user?.user_name || 'Twitzlaria'}\n                                        </Card.Header>\n                                        <Card.Meta>{user?.game_name}</Card.Meta>\n                                        <Card.Description>\n                                            {user?.title || 'twitzlariaren deskribapena hemen idatzita agertuko da'}\n                                        </Card.Description>\n                                    </Card.Content>\n                                </Card>\n                            </>\n                        ))\n                    ) : (\n                        <>\n                            <Card >\n                                <Card.Content>\n                                    <Image\n                                        floated='right'\n                                        size='tiny'\n                                        src={'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n                                    />\n                                    <Card.Header>\n                                        {/* <Icon circular inverted size='tiny' color='red' name='record' /> */}\n                                        {'Twitzlaria'}\n                                    </Card.Header>\n                                    <Card.Meta>{'0 ikustaldi'}</Card.Meta>\n                                    <Card.Description className=\"ellipsis\">\n                                        {'twitzlariaren deskribapena hemen idatzita agertuko da'}\n                                    </Card.Description>\n                                </Card.Content>\n                            </Card>\n                        </>\n                    )}\n                </Card.Group>\n            </Segment>\n        </Container>\n    )\n\n})\n\nexport default Zuzenean;","import React from 'react';\n\nconst Portada = ((props) => {\n\n    return <>Kaixo</>\n});\n\nexport default Portada;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>  \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios'\nimport secrets from './secrets.json';\n\nlet api = axios.create({\n    baseURL: 'https://api.twitch.tv/helix/',\n    headers: {\n        'client-id': secrets.client_id,\n        'Authorization': \"Bearer \" + secrets.token\n    }\n})\n\nexport default api;","import React, { useState, useEffect } from 'react';\n\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport './twitzlariakCard.css'\n\nimport api from './api.js';\n\nconst TwitzlariaCard = (({ title, meta, description, image_url, zuzenean=false }) => {\n\n  return (\n   <>\n    <Card.Content>\n      <Image\n        floated='left'\n        size='tiny'\n        src={image_url || 'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n      />\n      <Card.Header>\n        {zuzenean && <Icon circular inverted size='tiny' color='red' name='record' />}\n        {title || 'Twitzlaria'}\n      </Card.Header>\n      <Card.Meta>{meta ? (meta + ' ikustaldi') : '0 ikustaldi'}</Card.Meta>\n      <Card.Description className=\"ellipsis\">\n        {description || 'twitzlariaren deskribapena hemen idatzita agertuko da'}\n      </Card.Description>\n      </Card.Content>\n  </>\n  )\n})\n\n\nexport default TwitzlariaCard;"],"sourceRoot":""}