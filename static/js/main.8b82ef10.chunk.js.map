{"version":3,"sources":["reportWebVitals.js","api.js","store/actions/erabiltzaileak.js","store/actions/zuzenekoak.js","store/actions/klipak.js","helpers/initialLoader.jsx","components/Header.jsx","components/Footer.jsx","App.jsx","cards/TwitzlariaCard.js","views/Bilatzailea.js","views/Erabiltzailea.jsx","utils.js","views/Gutarrak.jsx","config/const.js","cards/ClipCard.jsx","cards/ZuzenekoaCard.js","views/Portada.js","views/utils.js","Routes.js","store/reducers/erabiltzaileak.js","store/reducers/zuzenekoak.js","store/reducers/klipak.js","store/reducers/index.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TwitchAPI","axios","create","baseURL","headers","secrets","client_id","Authorization","token","GetZuzenekoak","twitzlariList","a","get","join","response","data","GetErabiltzailearenBideoak","id","GetErabiltzailearenKlipak","gaur","Date","atzeraData","setDate","getDate","filter","clip","created_at","GetErabiltzaileak","users","GET_ERABILTZAILEAK_PENDING","GET_ERABILTZAILEAK_SUCCESS","GET_ERABILTZAILEAK_ERROR","GET_ZUZENEKOAK_PENDING","GET_ZUZENEKOAK_SUCCESS","GET_ZUZENEKOAK_ERROR","GET_KLIPAK_PENDING","GET_KLIPAK_SUCCESS","GET_KLIPAK_ERROR","initialLoader","App","twitzlariak","props","dispatch","useDispatch","useEffect","type","getErabiltzaileakAPI","result","payload","items","error","children","Header","className","Menu","inverted","Container","Item","as","Link","to","Footer","Segment","vertical","style","margin","padding","textAlign","Grid","divided","stackable","Column","width","content","TwitzlariaCard","title","meta","description","image_url","zuzenean","Card","Content","Image","floated","size","src","Icon","circular","color","name","Meta","Description","Bilatzailea","useState","setUsers","options","setOptions","userList","setUserList","bideoak","setBideoak","klipak","setKlipak","selectedUser","setSelectedUser","map","twitzlaria","key","text","value","getErabiltzailearenBideoak","user_id","getErabiltzailearenKlipak","user","display_name","azkenBideoak","azkenKlipak","forEach","bideoa","klipa","length","fetchData","Dropdown","placeholder","fluid","multiple","selection","search","allowAdditions","onAddItem","event","onChange","e","columns","index","onClick","handleClick","view_count","profile_image_url","Group","thumbnail_url","replace","pathname","url","target","moment","format","Erabiltzailea","useParams","erabiltzaileak","useSelector","state","loaded","item","login","toUpperCase","userObj","wrapped","ui","extra","dynamicSort","property","sortOrder","substr","b","Gutarrak","itemsPerRow","doubling","Dimmer","active","loading","Loader","sort","substring","KLIP_ORDENAZIOA","ClipCard","href","rel","Label","attached","broadcaster_name","basic","Row","creator_name","role","Popup","position","on","trigger","navigator","clipboard","writeText","ZuzenekoaCard","erabiltzailea","user_login","ribbon","user_name","game_name","viewer_count","Portada","lives","zuzenekoak","clips_state","clipsOriginal","setclipsOriginal","clipOwners","setclipOwners","clipCreators","setclipCreators","setClips","filteredClipper","setFilteredClipper","paginationClips","setPaginationClips","filteredBroadcaster","setfilteredBroadcaster","Object","keys","broadcasters","broadcaster","klip","push","Set","k","b_name","c_name","clip_count","count","paginationOrria","setPaginationOrria","getZuzenekoakAPI","getZuzenekoak","slice","getErabiltzailearenKlipakAPI","username","filterClips","field","setter","clearClipFilters","values_to_filter","v","toLowerCase","filter_clips","includes","icon","egilea","Statistic","number","Value","Select","irizpidea","defaultValue","Button","Math","round","Pagination","boundaryRange","defaultActivePage","showEllipsis","activePage","onPageChange","totalPages","AppRoutes","path","element","exact","initialState","erabiltzaileakReducer","action","zuzenekoakReducer","clippers","klipakReducer","rootReducer","combineReducers","configureStore","reducer","middleware","thunk","devTools","process","ReactDOM","createRoot","document","getElementById","render","store","basename"],"mappings":"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","file":"static/js/main.8b82ef10.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import secrets from './secrets.json';\n\nimport axios from 'axios';\n\nconst TwitchAPI = axios.create({\n  baseURL: 'https://api.twitch.tv/helix/',\n  headers: {\n    'client-id': secrets.client_id,\n    Authorization: 'Bearer ' + secrets.token,\n  },\n});\n\nexport const GetZuzenekoak = async (twitzlariList) => {\n  const response = await TwitchAPI.get(\n    'streams?user_login=' + twitzlariList.join('&user_login='),\n  );\n  return response.data.data;\n};\n\nexport const GetErabiltzailearenBideoak = async (id) => {\n  const response = await TwitchAPI.get('videos?user_id=' + id);\n  return response.data.data;\n};\n\n//   TwitchAPI.get('videos?user_id=' + user.id).then((response) => {\n//     response.data.data.map( (bideoa) => {\n//         new Date(bideoa.created_at)>atzeraData && (azkenBideo = [...azkenBideo, bideoa])\n//     })\n//     setBideoak(azkenBideo)\n// })\n\nexport const GetErabiltzailearenKlipak = async (id) => {\n  const response = await TwitchAPI.get(\n    'clips?broadcaster_id=' + id + '&first=100',\n  );\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 30);\n  return response.data.data.filter(\n    (clip) => new Date(clip.created_at) > atzeraData,\n  );\n};\n\nexport const GetErabiltzaileak = async (users) => {\n  const response = await TwitchAPI.get('users?login=' + users.join('&login='));\n  return response.data.data;\n};\nexport default TwitchAPI;\n","import { GetErabiltzaileak as getErabiltzaileakAPI } from '../../api';\nexport const GET_ERABILTZAILEAK_PENDING = 'GET_ERABILTZAILEAK_PENDING';\nexport const GET_ERABILTZAILEAK_SUCCESS = 'GET_ERABILTZAILEAK_SUCCESS';\nexport const GET_ERABILTZAILEAK_ERROR = 'GET_ERABILTZAILEAK_ERROR';\nexport const getErabiltzaileak = (users) => {\n  return async (dispatch) => {\n    dispatch({\n      type: GET_ERABILTZAILEAK_PENDING,\n    });\n    const result = await getErabiltzaileakAPI(users);\n    try {\n      dispatch({\n        type: GET_ERABILTZAILEAK_SUCCESS,\n        payload: {\n          items: result,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ERABILTZAILEAK_ERROR,\n        payload: error,\n      });\n      // console.error(error);\n    }\n  };\n};\n","import { GetZuzenekoak as getZuzenekoakAPI } from '../../api';\nexport const GET_ZUZENEKOAK_PENDING = 'GET_ZUZENEKOAK_PENDING';\nexport const GET_ZUZENEKOAK_SUCCESS = 'GET_ZUZENEKOAK_SUCCESS';\nexport const GET_ZUZENEKOAK_ERROR = 'GET_ZUZENEKOAK_ERROR';\nexport const getZuzenekoak = (users) => {\n  return async (dispatch) => {\n    dispatch({\n      type: GET_ZUZENEKOAK_PENDING,\n    });\n    const result = await getZuzenekoakAPI(users);\n    try {\n      dispatch({\n        type: GET_ZUZENEKOAK_SUCCESS,\n        payload: {\n          items: result,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ZUZENEKOAK_ERROR,\n        payload: error,\n      });\n      // console.error(error);\n    }\n  };\n};\n","import { GetErabiltzailearenKlipak as getErabiltzailearenKlipakAPI } from '../../api';\nexport const GET_KLIPAK_PENDING = 'GET_KLIPAK_PENDING';\nexport const GET_KLIPAK_SUCCESS = 'GET_KLIPAK_SUCCESS';\nexport const GET_KLIPAK_ERROR = 'GET_KLIPAK_ERROR';\nexport const getErabiltzailearenKlipak = (user) => {\n  return async (dispatch) => {\n    dispatch({\n      type: GET_KLIPAK_PENDING,\n    });\n    const result = await getErabiltzailearenKlipakAPI(user.id);\n    try {\n      dispatch({\n        type: GET_KLIPAK_SUCCESS,\n        payload: {\n          items: result,\n        },\n        user_id: user.id,\n        username: user.display_name,\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_KLIPAK_ERROR,\n        payload: error,\n      });\n    }\n  };\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport twitzlariak from '../config/twitzlariak.json';\nimport { getErabiltzaileak } from '../store/actions';\n\nconst initialLoader = (App) => {\n  const twitzlariList = twitzlariak.twitzlariak;\n  return (props) => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(getErabiltzaileak(twitzlariList));\n    }, [dispatch]);\n    return <App {...props}>{props.children}</App>;\n  };\n};\n\nexport default initialLoader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Menu } from 'semantic-ui-react';\nimport './header.css';\n\nexport const Header = () => {\n  return (\n    <div className=\"header\">\n      <Menu inverted>\n        <Container>\n          <Menu.Item as={Link} to=\"/\">\n            Hasierako orria\n          </Menu.Item>\n          {/* <Menu.Item as={Link} to=\"/bilatzailea\">\n            Bilatzailea\n          </Menu.Item> */}\n          <Menu.Item as={Link} to=\"/gutarrak\">\n            Gutarrak\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Container, Grid, Header, Segment } from 'semantic-ui-react';\n\nexport const Footer = () => {\n  return (\n    <Segment\n      inverted\n      vertical\n      style={{ margin: '5em 0em 0em', padding: '5em 0em' }}\n    >\n      <Container textAlign=\"center\">\n        <Grid divided inverted stackable>\n          <Grid.Column width={8}>\n            <Header inverted as=\"h4\" content=\"Footer Header\" />\n            <p>\n              Extra space for a call to action inside the footer that could help\n              re-engage users.\n            </p>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header inverted as=\"h4\" content=\"Footer Header\" />\n            <p>\n              Extra space for a call to action inside the footer that could help\n              re-engage users.\n            </p>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n};\n","import React from 'react';\n// import Routes from './Routes';\nimport initialLoader from './helpers/initialLoader';\nimport { Outlet } from 'react-router-dom';\nimport { Header as AppHeader } from './components/Header';\nimport { Footer as AppFooter } from './components/Footer';\nfunction App() {\n  return (\n    <>\n      <AppHeader />\n      <Outlet />\n      <AppFooter />\n    </>\n  );\n}\n\nexport default initialLoader(App);\n","import './twitzlariakCard.css';\n\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport React from 'react';\n\n// import api from '../api.js';\n\nconst TwitzlariaCard = ({\n  title,\n  meta,\n  description,\n  image_url,\n  zuzenean = false,\n}) => {\n  return (\n    <>\n      <Card.Content>\n        <Image\n          floated=\"left\"\n          size=\"tiny\"\n          src={\n            image_url ||\n            'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'\n          }\n        />\n        <Card.Header>\n          {zuzenean && (\n            <Icon circular inverted size=\"tiny\" color=\"red\" name=\"record\" />\n          )}\n          {title || 'Twitzlaria'}\n        </Card.Header>\n        <Card.Meta>{meta ? meta + ' ikustaldi' : '0 ikustaldi'}</Card.Meta>\n        <Card.Description className=\"ellipsis\">\n          {description ||\n            'twitzlariaren deskribapena hemen idatzita agertuko da'}\n        </Card.Description>\n      </Card.Content>\n    </>\n  );\n};\n\nexport default TwitzlariaCard;\n","import {\n  Card,\n  Container,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react';\nimport React, { useEffect, useState } from 'react';\nimport TwitchAPI, {\n  GetErabiltzailearenBideoak,\n  GetErabiltzailearenKlipak,\n} from '../api.js';\n\nimport { Link } from 'react-router-dom';\nimport TwitzlariaCard from '../cards/TwitzlariaCard';\nimport moment from 'moment';\nimport twitzlariak from '../config/twitzlariak.json';\n\nconst Bilatzailea = (props) => {\n  const [users, setUsers] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [bideoak, setBideoak] = useState([]);\n  const [klipak, setKlipak] = useState([]);\n  const [selectedUser, setSelectedUser] = useState([]);\n  // const [atzeraData, setAtzeraData] = useState(new Date())\n  const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria) => {\n    return { key: twitzlaria, text: twitzlaria, value: twitzlaria };\n  });\n\n  const getErabiltzailearenBideoak = async (user_id) => {\n    return await GetErabiltzailearenBideoak(user_id);\n  };\n  const getErabiltzailearenKlipak = async (user_id) => {\n    return await GetErabiltzailearenKlipak(user_id);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      userList.length > 0 &&\n        TwitchAPI.get(\n          'users?login=' + userList.join('&login='),\n        ).then((response) => setUsers(response.data.data));\n    };\n    fetchData();\n  }, [userList]);\n\n  useEffect(() => {\n    setOptions(twitzlariList);\n    setSelectedUser('');\n  }, [twitzlariList]);\n\n  function handleChange(e, { value }) {\n    setUserList(value);\n    setBideoak([]);\n    setKlipak([]);\n  }\n\n  async function handleClick(user) {\n    if (user) {\n      setSelectedUser(user.display_name);\n      setBideoak([]);\n      setKlipak([]);\n      let azkenBideoak = [];\n      let azkenKlipak = [];\n      await (await getErabiltzailearenBideoak(user.id)).forEach((bideoa) => {\n        azkenBideoak = [...azkenBideoak, bideoa];\n      });\n      setBideoak(azkenBideoak);\n\n      await (await getErabiltzailearenKlipak(user.id)).forEach((klipa) => {\n        azkenKlipak = [...azkenKlipak, klipa];\n      });\n      setKlipak(azkenKlipak);\n    }\n  }\n\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 7);\n\n  return (\n    <Container>\n      <Dropdown\n        placeholder=\"Erabiltzaileak\"\n        fluid\n        multiple\n        selection\n        search\n        allowAdditions\n        onAddItem={(event, data) =>\n          setOptions([\n            ...options,\n            { key: data.value, text: data.value, value: data.value },\n          ])\n        }\n        options={options}\n        onChange={handleChange}\n      />\n      <Segment>\n        <Grid columns={2} divided>\n          <Grid.Column width={5}>\n            {users.length > 0 ? (\n              users.map((user, index) => (\n                <Card\n                  className={selectedUser === user.display_name ? 'active' : ''}\n                  onClick={() => handleClick(user)}\n                >\n                  <TwitzlariaCard\n                    title={user.display_name}\n                    meta={user.view_count}\n                    description={user.description}\n                    image_url={user.profile_image_url}\n                    key={index}\n                  />\n                </Card>\n              ))\n            ) : (\n              <Card>\n                <TwitzlariaCard />\n              </Card>\n            )}\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon size=\"tiny\" name=\"video camera\" />\n                <Header.Content>Bideoak</Header.Content>\n              </Header>\n            </Segment>\n            <Card.Group>\n              {bideoak.length > 0 ? (\n                bideoak.map((bideoa, index) => (\n                  <Card>\n                    <Image\n                      src={bideoa.thumbnail_url\n                        .replace('%{width}', 440)\n                        .replace('%{height}', 228)}\n                    />\n                    <Card.Content>\n                      <Card.Header\n                        as={Link}\n                        to={{ pathname: bideoa.url }}\n                        target=\"_blank\"\n                      >\n                        {bideoa.title}\n                      </Card.Header>\n                      <Card.Description as=\"a\">\n                        {moment(bideoa.created_at).format('YYYY/MM/DD HH:MM')}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))\n              ) : (\n                <>Ez dago bideorik...</>\n              )}\n            </Card.Group>\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon size=\"tiny\" name=\"paperclip\" />\n                <Header.Content>klipak</Header.Content>\n              </Header>\n            </Segment>\n            <Card.Group>\n              {klipak.length > 0 ? (\n                klipak.map((clip, index) => (\n                  <Card>\n                    <Image\n                      src={clip.thumbnail_url\n                        .replace('%{width}', 440)\n                        .replace('%{height}', 228)}\n                    />\n                    <Card.Content>\n                      <Card.Header as={Link} to={{ pathname: clip.url }}>\n                        {clip.title}\n                      </Card.Header>\n                      <Card.Description as=\"a\">\n                        {moment(clip.created_at).format('YYYY/MM/DD HH:MM')}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))\n              ) : (\n                <>Ez dago klipik...</>\n              )}\n            </Card.Group>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Bilatzailea;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Card, Container, Header, Icon, Image } from 'semantic-ui-react';\n\nimport moment from 'moment';\n\nconst Erabiltzailea = (props) => {\n  let { user } = useParams();\n  const erabiltzaileak = useSelector((state) => state.erabiltzaileak);\n  const userList =\n    erabiltzaileak.loaded && erabiltzaileak.items.length > 0\n      ? erabiltzaileak.items.filter(\n          (item) => item.login.toUpperCase() === user.toUpperCase(),\n        )\n      : {};\n  const userObj = userList.length > 0 ? userList[0] : {};\n  return (\n    <Container>\n      <Header as=\"h1\">{user}</Header>\n      <Card>\n        <Image\n          src={userObj?.profile_image_url\n            ?.replace('%{width}', 440)\n            .replace('%{height}', 228)}\n          wrapped\n          ui={false}\n        />\n        <Card.Content>\n          <Card.Header>{userObj?.display_name}</Card.Header>\n          <Card.Meta>\n            <span className=\"date\">\n              {moment(userObj?.created_at).format('YYYY/MM/DD')}\n            </span>\n          </Card.Meta>\n          <Card.Description>{userObj?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name=\"eye\" />\n          {userObj?.view_count} ikustaldi\n        </Card.Content>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Erabiltzailea;\n","function dynamicSort(property) {\n  var sortOrder = 1;\n  if (property[0] === '-') {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n  return function (a, b) {\n    /* next line works with strings and numbers,\n     * and you may want to customize it to your needs\n     */\n    var result =\n      a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n\nexport { dynamicSort };\n","import {\n  Card,\n  // Container,\n  Icon,\n  Image,\n  Loader,\n  Dimmer,\n} from 'semantic-ui-react';\nimport React from 'react';\n\nimport { dynamicSort } from '../utils.js';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst Gutarrak = (props) => {\n  const erabiltzaileak = useSelector((state) => state.erabiltzaileak);\n\n  return (\n    <div>\n      <h1>Gutarrak</h1>\n      <Card.Group itemsPerRow={6} doubling>\n        <Dimmer active={erabiltzaileak.loading} inverted>\n          <Loader>Bagatoz...</Loader>\n        </Dimmer>\n        {erabiltzaileak.loaded &&\n          erabiltzaileak.items.sort(dynamicSort('display_name')).map((user) => {\n            return (\n              <Card>\n                <Image\n                  src={user?.profile_image_url\n                    ?.replace('%{width}', 440)\n                    .replace('%{height}', 228)}\n                  wrapped\n                  ui={false}\n                />\n                <Card.Content>\n                  <Card.Header>\n                    <Link to={`/gutarrak/${user?.display_name}`}>\n                      {user?.display_name}\n                    </Link>\n                  </Card.Header>\n                  <Card.Meta>\n                    <span className=\"date\">\n                      {moment(user?.created_at).format('YYYY/MM/DD')}\n                    </span>\n                  </Card.Meta>\n                  {user?.description && (\n                    <Card.Description>\n                      {user?.description.substring(0, 55)}...\n                    </Card.Description>\n                  )}\n                </Card.Content>\n                <Card.Content extra>\n                  <Icon name=\"eye\" />\n                  {user?.view_count} ikustaldi\n                </Card.Content>\n              </Card>\n            );\n          })}\n      </Card.Group>\n    </div>\n  );\n};\n\nexport default Gutarrak;\n","import { Icon } from 'semantic-ui-react';\nimport React from 'react';\nimport twitzlariak from './twitzlariak.json';\nexport const KLIP_ORDENAZIOA = [\n  {\n    key: '-created_at',\n    value: '-created_at',\n    text: <>Berrienetik zaharrenera</>,\n  },\n  {\n    key: 'created_at',\n    value: 'created_at',\n    text: <>Zaharrenetik berrienera</>,\n  },\n  {\n    key: '-view_count',\n    value: '-view_count',\n    text: <>Ikusienak aurrena</>,\n  },\n  {\n    key: 'broadcaster_name',\n    value: 'broadcaster_name',\n    text: (\n      <>\n        Streamerra\n        <Icon name=\"sort alphabet down\" />\n      </>\n    ),\n  },\n  {\n    key: '-broadcaster_name',\n    value: '-broadcaster_name',\n    text: (\n      <>\n        Streamerra\n        <Icon name=\"sort alphabet up\" />\n      </>\n    ),\n  },\n  {\n    key: 'creator_name',\n    value: 'creator_name',\n    text: (\n      <>\n        Egilea\n        <Icon name=\"sort alphabet down\" />\n      </>\n    ),\n  },\n  {\n    key: '-creator_name',\n    value: '-creator_name',\n    text: (\n      <>\n        Egilea\n        <Icon name=\"sort alphabet up\" />\n      </>\n    ),\n  },\n];\n\nexport const TWITZLARI_AUKERAK = [\n  ...twitzlariak.twitzlariak.map((twitzlaria) => {\n    return {\n      key: twitzlaria,\n      value: twitzlaria,\n      text: twitzlaria,\n    };\n  }),\n];\n","import {\n  Card,\n  Grid,\n  Icon,\n  Image,\n  Label,\n  Popup,\n  Segment,\n} from 'semantic-ui-react';\nimport './cards.css';\nimport React from 'react';\nimport moment from 'moment';\n\nconst ClipCard = ({ clip }) => {\n  return (\n    <Card>\n      <a href={clip.url} target=\"_blank\" rel=\"noreferrer\">\n        <Image\n          src={clip.thumbnail_url\n            .replace('%{width}', 440)\n            .replace('%{height}', 228)}\n        />\n      </a>\n      <Card.Content>\n        <Card.Header>{clip.title}</Card.Header>\n        <Label attached=\"top left\" className=\"card-ribbon\">\n          {clip.broadcaster_name}\n        </Label>\n      </Card.Content>\n      <Card.Content extra>\n        <Segment basic>\n          <Grid columns={2}>\n            <Grid.Row className=\"no-padded\">\n              <Grid.Column width={16}>\n                <Icon name=\"paperclip\" />\n                {clip.creator_name}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <Grid>\n                  <Grid.Row className=\"no-padded\">\n                    <Grid.Column>\n                      <Icon name=\"clock\" />\n                      {moment(clip.created_at).format('YYYY/MM/DD')}\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row className=\"no-padded\">\n                    <Grid.Column>\n                      <Icon name=\"eye\" />\n                      {clip.view_count} ikustaldi\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n              <Grid.Column width={6}>\n                <a\n                  type=\"button\"\n                  role=\"button\"\n                  title=\"Share on twitter\"\n                  target={'_blank'}\n                  rel=\"noreferrer\"\n                  href={`https://twitter.com/intent/tweet?url=[${clip.broadcaster_name}]%0A${clip.title}%0A%0A${clip.url}`}\n                >\n                  <Icon name=\"twitter\" color=\"blue\" size=\"large\" />\n                </a>\n                <Popup\n                  content=\"Arbelean kopiatu da zure sareetan partekatzeko!\"\n                  basic\n                  inverted\n                  position=\"top center\"\n                  on=\"click\"\n                  trigger={\n                    <Icon\n                      name=\"copy\"\n                      size=\"large\"\n                      className=\"copy-icon\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(\n                          `[${clip.broadcaster_name}]\\n${clip.title}\\n\\n${clip.url}`,\n                        );\n                      }}\n                    />\n                  }\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ClipCard;\n","import { Card, Image, Label, Icon } from 'semantic-ui-react';\n\nimport React from 'react';\n\n// import './twitzlariakCard.css'\n\nconst ZuzenekoaCard = ({ erabiltzailea }) => {\n  return (\n    <Card>\n      <a\n        href={'https://www.twitch.tv/' + erabiltzailea?.user_login}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Image\n          src={\n            erabiltzailea?.thumbnail_url\n              .replace('{width}', 440)\n              .replace('{height}', 228) ||\n            'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'\n          }\n        />\n      </a>\n      <Card.Content>\n        <Label color=\"red\" ribbon=\"right\">\n          Zuzenean\n        </Label>\n        <Card.Header>\n          <a\n            href={'https://www.twitch.tv/' + erabiltzailea?.user_login}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {erabiltzailea?.user_name || 'Twitzlaria'}\n          </a>\n        </Card.Header>\n        <Card.Meta>{erabiltzailea?.game_name || 'Jokoaren izena'}</Card.Meta>\n        <Card.Description>\n          {erabiltzailea?.title ||\n            'twitzlariaren deskribapena hemen idatzita agertuko da'}\n          <div>\n            <Icon name=\"eye\" />\n            {erabiltzailea.viewer_count} ikusle\n          </div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ZuzenekoaCard;\n","import './portada.css';\n\nimport {\n  Card,\n  Container,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Button,\n  Pagination,\n  Segment,\n  Select,\n  Statistic,\n  // List,\n  // Item,\n} from 'semantic-ui-react';\n// import { GetErabiltzailearenKlipak } from '../api.js';\nimport { KLIP_ORDENAZIOA } from '../config/const';\nimport React, { useEffect, useState } from 'react';\n\nimport ClipCard from '../cards/ClipCard';\nimport ZuzenekoaCard from '../cards/ZuzenekoaCard';\nimport { dynamicSort } from '../utils';\nimport twitzlariak from '../config/twitzlariak.json';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getZuzenekoak } from '../store/actions';\nimport { getErabiltzailearenKlipak } from '../store/actions';\nimport { getStatSize } from './utils';\n\nconst Portada = (props) => {\n  const users = useSelector((state) => state.erabiltzaileak);\n  const lives = useSelector((state) => state.zuzenekoak);\n  const clips_state = useSelector((state) => state.klipak);\n  const dispatch = useDispatch();\n  const [clipsOriginal, setclipsOriginal] = useState([]);\n  const [clipOwners, setclipOwners] = useState([]);\n  const [clipCreators, setclipCreators] = useState([]);\n  const [klipak, setClips] = useState([]);\n  const [filteredClipper, setFilteredClipper] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [paginationClips, setPaginationClips] = useState([]);\n  const [filteredBroadcaster, setfilteredBroadcaster] = useState([]);\n  useEffect(() => {\n    if (\n      clips_state.loaded &&\n      Object.keys(clips_state.broadcasters).length > 0\n    ) {\n      let klipak = [];\n      Object.keys(clips_state.broadcasters).forEach((broadcaster) => {\n        if (clips_state.broadcasters[broadcaster].length > 0) {\n          clips_state.broadcasters[broadcaster].forEach((klip) =>\n            klipak.push(klip),\n          );\n        }\n      });\n      setClips(klipak.sort(dynamicSort('-created_at')));\n      setclipsOriginal([...klipak.sort(dynamicSort('-created_at'))]);\n      setclipOwners(\n        [...new Set(klipak.map((k) => k.broadcaster_name).sort())].map(\n          (b_name) => {\n            return {\n              key: b_name,\n              value: b_name,\n              text: b_name,\n            };\n          },\n        ),\n      );\n      setclipCreators(\n        [...new Set(klipak.map((k) => k.creator_name).sort())].map((c_name) => {\n          var clip_count = klipak.filter((k) => k.creator_name === c_name);\n          return {\n            key: c_name,\n            value: c_name,\n            text: c_name,\n            count: clip_count.length,\n          };\n        }),\n      );\n    }\n  }, [clips_state]);\n  const [paginationOrria, setPaginationOrria] = useState(1);\n  // const [clipCreators, setclipCreators] = useState([]);\n  const twitzlariList = twitzlariak.twitzlariak;\n  useEffect(() => {\n    dispatch(getZuzenekoak(twitzlariList));\n  }, [dispatch, twitzlariList]);\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 30);\n\n  useEffect(() => {\n    setPaginationClips(\n      klipak.slice((paginationOrria - 1) * 12, (paginationOrria - 1) * 12 + 12),\n    );\n  }, [klipak, paginationOrria]);\n\n  useEffect(() => {\n    if (users.loaded && users.items.length > 0) {\n      users.items.forEach((user) => {\n        dispatch(getErabiltzailearenKlipak(user));\n      });\n    }\n  }, [dispatch, users]);\n\n  const handlePaginationChange = (e, { activePage }) =>\n    setPaginationOrria(activePage);\n\n  const ordenatu = (irizpidea) => {\n    setClips([...klipak.sort(dynamicSort(irizpidea))]);\n    setclipsOriginal([...klipak.sort(dynamicSort(irizpidea))]);\n  };\n\n  const filterClips = (e, { value }, field, setter) => {\n    clearClipFilters();\n    if (value.length > 0) {\n      const values_to_filter = value.map((v) => v.toLowerCase());\n      const filter_clips = [\n        ...clipsOriginal.filter((klipa) =>\n          values_to_filter.includes(klipa[field].toLowerCase()),\n        ),\n      ];\n      setter(value);\n      setClips(filter_clips);\n    } else if (value.length === 0) {\n      setClips(clipsOriginal);\n    }\n  };\n\n  const clearClipFilters = () => {\n    setFilteredClipper([]);\n    setfilteredBroadcaster([]);\n    setClips(clipsOriginal);\n  };\n\n  return (\n    <div>\n      <h1>Twitch euskaraz</h1>\n      <div className=\"live-container\">\n        <h2 className=\"ui container\">Orain zuzenean</h2>\n        {lives.loaded && lives.items.length > 0 ? (\n          <Card.Group itemsPerRow={3} doubling>\n            {lives.items.map((erabiltzailea, index) => (\n              <ZuzenekoaCard erabiltzailea={erabiltzailea} />\n            ))}\n          </Card.Group>\n        ) : (\n          <Segment basic className=\"live\">\n            <Header icon>\n              <Icon name=\"history\" />\n              Orain momentuan ez dago inor zuzenean.\n            </Header>\n          </Segment>\n        )}\n      </div>\n      <hr />\n      <div className=\"clips-container\">\n        <h2 className=\"ui container\">Klipak</h2>\n        <Segment className=\"clipers-container\">\n          <Container>\n            <h3>Klipari ekinenak:</h3>\n            <Grid columns={5} className=\"ranking-grid\">\n              {clipCreators &&\n                clipCreators\n                  .sort(dynamicSort('-count'))\n                  .slice(0, 5)\n                  .map((egilea, key) => (\n                    <Grid.Column key={key}>\n                      <Statistic\n                        size={getStatSize(egilea.count)}\n                        color=\"violet\"\n                      >\n                        <Statistic.Value>{egilea.count}</Statistic.Value>\n                        <Statistic.Label>{egilea.value}</Statistic.Label>\n                      </Statistic>\n                    </Grid.Column>\n                  ))}\n            </Grid>\n          </Container>\n        </Segment>\n        <Segment className=\"clip-filter-container\">\n          <Container>\n            <h3>Iragazkiak:</h3>\n            <Grid columns={3} divided stackable>\n              <Grid.Row>\n                <Grid.Column>\n                  <strong className=\"filter-heading\">Ordenatu:</strong>\n                  <Select\n                    placeholder=\"Ordenatu klipak\"\n                    options={KLIP_ORDENAZIOA}\n                    onChange={(e, { value }) => ordenatu(value)}\n                    defaultValue={'-created_at'}\n                  />\n                </Grid.Column>\n                <Grid.Column>\n                  <strong className=\"filter-heading\">\n                    Iragazi klip egilea:\n                  </strong>\n                  <Dropdown\n                    id=\"filter-clip-creator\"\n                    placeholder=\"Klip egilea\"\n                    multiple\n                    selection\n                    search\n                    value={filteredClipper}\n                    onAddItem={(event, data) =>\n                      setOptions([\n                        ...options,\n                        {\n                          key: data.value,\n                          text: data.value,\n                          value: data.value,\n                        },\n                      ])\n                    }\n                    options={clipCreators}\n                    onChange={(e, props) =>\n                      filterClips(e, props, 'creator_name', setFilteredClipper)\n                    }\n                  />\n                </Grid.Column>\n                <Grid.Column>\n                  <strong className=\"filter-heading\">\n                    Iragazi streamerra:\n                  </strong>\n                  <Dropdown\n                    id=\"filter-streamer\"\n                    placeholder=\"Steamerra\"\n                    multiple\n                    selection\n                    search\n                    value={filteredBroadcaster}\n                    onAddItem={(event, data) =>\n                      setOptions([\n                        ...options,\n                        {\n                          key: data.value,\n                          text: data.value,\n                          value: data.value,\n                        },\n                      ])\n                    }\n                    options={clipOwners}\n                    onChange={(e, props) =>\n                      filterClips(\n                        e,\n                        props,\n                        'broadcaster_name',\n                        setfilteredBroadcaster,\n                      )\n                    }\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <Button onClick={clearClipFilters}>Garbitu iragazkiak</Button>\n          </Container>\n        </Segment>\n        <Container>\n          {paginationClips.length > 0 ? (\n            <>\n              <Card.Group itemsPerRow={4} doubling>\n                {paginationClips.map((clip, key) => (\n                  <ClipCard key={key} clip={clip} />\n                ))}\n              </Card.Group>\n              {Math.round(klipak.length / 12) > 1 && (\n                <Segment basic textAlign=\"center\">\n                  <Pagination\n                    boundaryRange={1}\n                    defaultActivePage={1}\n                    showEllipsis={true}\n                    activePage={paginationOrria}\n                    onPageChange={handlePaginationChange}\n                    totalPages={Math.round(klipak.length / 12)}\n                  />\n                </Segment>\n              )}\n            </>\n          ) : (\n            <Segment placeholder>\n              <Header icon>\n                <Icon name=\"video\" />\n                Ez dago bilaketa horrekin ezer.\n              </Header>\n            </Segment>\n          )}\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Portada;\n","export const getStatSize = (number) => {\n  if (number < 2) {\n    return 'mini';\n  } else if (number < 5) {\n    return 'tiny';\n  } else if (number < 10) {\n    return 'small';\n  } else if (number < 20) {\n    return 'large';\n  } else {\n    return 'huge';\n  }\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport App from './App';\nimport './App.css';\nimport { Bilatzailea, Erabiltzailea, Gutarrak, Portada } from './views';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n// import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction AppRoutes() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route exact path=\"/\" element={<Portada />}></Route>\n        <Route exact path=\"/bilatzailea\" element={<Bilatzailea />}></Route>\n        <Route exact path=\"/gutarrak\" element={<Gutarrak />}></Route>\n        <Route path=\"/gutarrak/:user\" element={<Erabiltzailea />}></Route>\n      </Route>\n    </Routes>\n  );\n}\n\nexport default AppRoutes;\n","import {\n  GET_ERABILTZAILEAK_PENDING,\n  GET_ERABILTZAILEAK_SUCCESS,\n  GET_ERABILTZAILEAK_ERROR,\n} from '../actions/erabiltzaileak';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nconst erabiltzaileakReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERABILTZAILEAK_PENDING:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    case GET_ERABILTZAILEAK_SUCCESS:\n      return {\n        ...state,\n        items: action.payload.items,\n        loading: false,\n        loaded: true,\n      };\n    case GET_ERABILTZAILEAK_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        loaded: false,\n      };\n    // Default case\n    default:\n      return state;\n  }\n};\n\nexport default erabiltzaileakReducer;\n","import {\n  GET_ZUZENEKOAK_PENDING,\n  GET_ZUZENEKOAK_SUCCESS,\n  GET_ZUZENEKOAK_ERROR,\n} from '../actions/zuzenekoak';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nconst zuzenekoakReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ZUZENEKOAK_PENDING:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    case GET_ZUZENEKOAK_SUCCESS:\n      return {\n        ...state,\n        items: action.payload.items,\n        loading: false,\n        loaded: true,\n      };\n    case GET_ZUZENEKOAK_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        loaded: false,\n      };\n    // Default case\n    default:\n      return state;\n  }\n};\n\nexport default zuzenekoakReducer;\n","import {\n  GET_KLIPAK_PENDING,\n  GET_KLIPAK_SUCCESS,\n  GET_KLIPAK_ERROR,\n} from '../actions/klipak';\n\nconst initialState = {\n  broadcasters: {},\n  clippers: {},\n  loading: false,\n  loaded: false,\n  error: null,\n};\n\nconst klipakReducer = (state = initialState, action) => {\n  let clippers = {};\n  switch (action.type) {\n    case GET_KLIPAK_PENDING:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    case GET_KLIPAK_SUCCESS:\n      action.payload.items.forEach((clip) => {\n        if (clippers[clip.creator_name]) {\n          clippers[clip.creator_name] = clippers[clip.creator_name] + 1;\n        } else {\n          clippers[clip.creator_name] = 1;\n        }\n      });\n      return {\n        ...state,\n        broadcasters: {\n          ...state.broadcasters,\n          [action.username]: action.payload.items,\n        },\n        clippers: {\n          ...state.clippers,\n          ...clippers,\n        },\n        loading: false,\n        loaded: true,\n      };\n    case GET_KLIPAK_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        loaded: false,\n      };\n    // Default case\n    default:\n      return state;\n  }\n};\n\nexport default klipakReducer;\n","import { combineReducers } from 'redux';\n\nimport erabiltzaileakReducer from './erabiltzaileak';\nimport zuzenekoakReducer from './zuzenekoak';\nimport klipakReducer from './klipak';\n\nconst rootReducer = combineReducers({\n  erabiltzaileak: erabiltzaileakReducer,\n  zuzenekoak: zuzenekoakReducer,\n  klipak: klipakReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default configureStore({\n  reducer: rootReducer,\n  middleware: [thunk],\n  devTools: process.env.NODE_ENV !== 'production',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppRoutes from './Routes';\nimport store from './store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/twitzlariak\">\n      <AppRoutes />\n    </BrowserRouter>\n  </Provider>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}