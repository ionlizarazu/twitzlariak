{"version":3,"sources":["App.js","Portada.js","ZuzenekoaCard.js","Zuzenean.js","TwitzlariaCard.js","Bilatzailea.js","reportWebVitals.js","index.js","api.js"],"names":["App","console","log","process","basename","inverted","Item","as","Link","to","header","circular","size","color","name","exact","path","Portada","props","ZuzenekoaCard","erabiltzailea","href","user_login","target","rel","Card","Image","src","thumbnail_url","replace","Content","Label","ribbon","Header","user_name","Meta","game_name","Description","title","Zuzenean","useState","zuzenekoak","setZuzenekoak","twitzlariList","twitzlariak","map","twitzlaria","getZuzenekoak","a","GetZuzenekoak","useEffect","Container","style","margin","Segment","Group","length","index","TwitzlariaCard","meta","description","image_url","zuzenean","floated","Icon","className","Bilatzailea","users","setUsers","options","setOptions","userList","setUserList","bideoak","setBideoak","klipak","setKlipak","selectedUser","setSelectedUser","key","text","value","getErabiltzailearenBideoak","user_id","GetErabiltzailearenBideoak","getErabiltzailearenKlipak","GetErabiltzailearenKlipak","user","display_name","azkenBideoak","azkenKlipak","id","bideoa","Date","created_at","atzeraData","klipa","TwitchAPI","get","join","then","response","data","fetchData","gaur","setDate","getDate","Dropdown","placeholder","fluid","multiple","selection","search","allowAdditions","onAddItem","event","onChange","e","Grid","columns","divided","Column","width","onClick","handleClick","view_count","profile_image_url","pathname","url","moment","format","clip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","create","baseURL","headers","secrets","client_id","token"],"mappings":"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","file":"static/js/main.f6bdda45.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Menu, Icon } from 'semantic-ui-react';\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport Bilatzailea from './Bilatzailea';\nimport Zuzenean from './Zuzenean';\nimport Portada from './Portada';\nfunction App() {\n  console.log(\"PROCESS: \", process)\n  return (\n    <Router basename={'/'}>\n      <Menu inverted>\n        <Container>\n        <Menu.Item as={Link} to='/'>\n            Portada\n          </Menu.Item>\n          <Menu.Item as={Link} to='/bilatzailea'>\n            Bilatzailea\n          </Menu.Item>\n          <Menu.Item as={Link} to='/zuzenean' header>\n            <Icon circular inverted size='tiny' color='red' name='record' />\n              Zuzenean\n          </Menu.Item>\n        </Container>\n      </Menu>\n      <Switch>\n        <Route exact path=\"/\">\n          <Portada />\n        </Route>\n        <Route exact path=\"/bilatzailea\">\n          <Bilatzailea />\n        </Route>\n        <Route exact path=\"/zuzenean\">\n          <Zuzenean />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nconst Portada = ((props) => {\n\n    return(\n        <Container>\n            <h1>Portadako titularra</h1>\n        </Container>\n    ) \n});\n\nexport default Portada;","import React from 'react';\n\nimport { Card, Image, Label } from 'semantic-ui-react';\n// import './twitzlariakCard.css'\n\nconst ZuzenekoaCard = ( ({ erabiltzailea }) => {\n\n  return (\n   <>\n    <a href={'https://www.twitch.tv/'+erabiltzailea?.user_login} target=\"_blank\" rel=\"noreferrer\">\n        <Card>\n            <Image\n                src={erabiltzailea?.thumbnail_url.replace('{width}', 440).replace('{height}', 228) || 'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n            />\n            <Card.Content>\n                <Label color='red' ribbon='right'>\n                    Zuzenean\n                </Label>\n                <Card.Header>\n                    {erabiltzailea?.user_name || 'Twitzlaria'}\n                </Card.Header>\n                <Card.Meta>{erabiltzailea?.game_name}</Card.Meta>\n                <Card.Description>\n                    {erabiltzailea?.title || 'twitzlariaren deskribapena hemen idatzita agertuko da'}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    </a>\n  </>\n  )\n});\n\n\nexport default ZuzenekoaCard;","import React, { useState, useEffect } from 'react';\n\nimport ZuzenekoaCard from './ZuzenekoaCard';\nimport { Container, Menu, Icon, Segment, Grid, Card, Image, Dropdown, Label } from 'semantic-ui-react';\nimport { GetZuzenekoak } from './api.js';\nimport twitzlariak from './twitzlariak.json';\n\n\nconst Zuzenean = ((props) => {\n    const [zuzenekoak, setZuzenekoak] = useState([])\n    const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria)=>{return twitzlaria})\n    const getZuzenekoak = async() => setZuzenekoak(await GetZuzenekoak(twitzlariList));\n    useEffect(()=>{\n       getZuzenekoak();\n    },[])\n    return (\n        <Container style={{ margin: 20 }}>\n            <Segment>\n                <Card.Group>\n                    {zuzenekoak.length > 0 ? (\n                        zuzenekoak.map((erabiltzailea, index) => (\n                            <ZuzenekoaCard erabiltzailea={erabiltzailea} />\n                        ))\n                    ) : (\n                        <ZuzenekoaCard />\n                    )}\n                </Card.Group>\n            </Segment>\n        </Container>\n    )\n\n})\n\nexport default Zuzenean;","import React, { useState, useEffect } from 'react';\n\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport './twitzlariakCard.css'\n\nimport api from './api.js';\n\nconst TwitzlariaCard = (({ title, meta, description, image_url, zuzenean=false }) => {\n\n  return (\n   <>\n    <Card.Content>\n      <Image\n        floated='left'\n        size='tiny'\n        src={image_url || 'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n      />\n      <Card.Header>\n        {zuzenean && <Icon circular inverted size='tiny' color='red' name='record' />}\n        {title || 'Twitzlaria'}\n      </Card.Header>\n      <Card.Meta>{meta ? (meta + ' ikustaldi') : '0 ikustaldi'}</Card.Meta>\n      <Card.Description className=\"ellipsis\">\n        {description || 'twitzlariaren deskribapena hemen idatzita agertuko da'}\n      </Card.Description>\n      </Card.Content>\n  </>\n  )\n})\n\n\nexport default TwitzlariaCard;","import React, { useState, useEffect } from 'react';\n\nimport TwitchAPI, {GetErabiltzailearenBideoak, GetErabiltzailearenKlipak} from './api.js';\nimport { Container, Segment, Grid, Card, Image, Dropdown, Header, Icon } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport TwitzlariaCard from './TwitzlariaCard';\nimport twitzlariak from './twitzlariak.json';\nimport moment from \"moment\";\n\nconst Bilatzailea = ((props) => {\n    const [users, setUsers] = useState([])\n    const [options, setOptions] = useState([])\n    const [userList, setUserList] = useState([])\n    const [bideoak, setBideoak] = useState([])\n    const [klipak, setKlipak] = useState([])\n    const [selectedUser, setSelectedUser] = useState([])\n    // const [atzeraData, setAtzeraData] = useState(new Date())\n    const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria)=>{return {key: twitzlaria, text: twitzlaria, value: twitzlaria}})\n    \n    const getErabiltzailearenBideoak = async (user_id)=> {return await GetErabiltzailearenBideoak(user_id)};\n    const getErabiltzailearenKlipak = async(user_id) => {return await GetErabiltzailearenKlipak(user_id)};\n    \n    useEffect(() => {\n      const fetchData = async () => {\n        userList.length > 0 && (\n          TwitchAPI.get('users?login=' + userList.join('&login=')).then((response) => (\n            setUsers(response.data.data)\n          ))\n        )\n      }\n      fetchData()\n    }, [userList])\n\n    useEffect(() => {\n        setOptions(twitzlariList)\n        setSelectedUser('')\n    }, [])\n  \n    function handleChange(e, { value }) {\n      setUserList(value)\n      setBideoak([])\n      setKlipak([])\n    }\n  \n    async function handleClick(user) {\n      if (user) {\n        setSelectedUser(user.display_name)\n        setBideoak([])\n        setKlipak([])\n        let azkenBideoak = []\n        let azkenKlipak = []\n        await (await getErabiltzailearenBideoak(user.id)).map((bideoa) => {\n            new Date(bideoa.created_at)>atzeraData && (azkenBideoak = [...azkenBideoak, bideoa])\n        });\n        setBideoak(azkenBideoak)\n        \n        await (await getErabiltzailearenKlipak(user.id)).map((klipa) => {\n            new Date(klipa.created_at)>atzeraData && (azkenKlipak = [...azkenKlipak, klipa])\n        });\n        setKlipak(azkenKlipak);\n      }\n    };\n\n    let gaur = new Date()\n    let atzeraData = new Date()\n    atzeraData.setDate(gaur.getDate()-7)\n    \n    return(\n        <Container>\n            <Dropdown placeholder='Erabiltzaileak' fluid multiple selection search allowAdditions\n                onAddItem={(event, data) => setOptions([...options,\n                { key: data.value, text: data.value, value: data.value }])}\n                options={options}\n                onChange={handleChange} />\n            <Segment>\n                <Grid columns={2} divided>\n                <Grid.Column width={5}>\n                    {users.length > 0 ? (\n                    users.map((user, index) => (\n                        <Card className={selectedUser === user.display_name ? 'active': ''} onClick={() => handleClick(user)}>\n                        <TwitzlariaCard \n                            title={user.display_name} \n                            meta={user.view_count} \n                            description={user.description} \n                            image_url={user.profile_image_url} \n                            key={index} />\n                        </Card>\n                    ))\n                    ) : (\n                    <Card>\n                        <TwitzlariaCard />\n                    </Card>\n                    )\n                    }\n                </Grid.Column>\n                <Grid.Column width={5}>\n                {bideoak.length > 0 && \n                    <Segment>\n                        <Header as='h2'>\n                            <Icon  size='tiny' name='video camera' />\n                            <Header.Content>Bideoak</Header.Content>\n                        </Header>\n                    </Segment>\n                }\n                    <Card.Group>\n                    {bideoak.length > 0 ? (\n                        bideoak.map((bideoa, index) => (\n                            <>\n                        {new Date(bideoa.created_at)>atzeraData && \n                            <Card>\n                            <Image src={bideoa.thumbnail_url.replace('%{width}', 440).replace('%{height}', 228)} />\n                            <Card.Content>\n                                <Card.Header as={Link} to={{ pathname: bideoa.url }} target='_blank'>{bideoa.title}</Card.Header>\n                                <Card.Description as='a'>{moment(bideoa.created_at).format('YYYY/MM/DD HH:MM')}</Card.Description>\n                            </Card.Content>\n                            </Card>\n                        }\n                        </>\n                        ))\n                    ) : (\n                        <>\n                        </>\n                    )\n                    }\n                    </Card.Group>\n                </Grid.Column>\n                <Grid.Column width={5}>\n                    {klipak.length > 0 && \n                    <Segment>\n                        <Header as='h2'>\n                            <Icon  size='tiny' name='paperclip' />\n                            <Header.Content>klipak</Header.Content>\n                        </Header>\n                    </Segment>\n                    }\n                    <Card.Group>\n                    {klipak.length > 0 ? (\n                        klipak.map((clip, index) => (\n                        <>\n                        {new Date(clip.created_at)>atzeraData && \n                            <Card>\n                            <Image src={clip.thumbnail_url.replace('%{width}', 440).replace('%{height}', 228)} />\n                            <Card.Content>\n                                <Card.Header as={Link} to={{ pathname: clip.url }}>{clip.title}</Card.Header>\n                                <Card.Description as='a'>{moment(clip.created_at).format('YYYY/MM/DD HH:MM')}</Card.Description>\n                            </Card.Content>\n                            </Card>\n                        }\n                        </>\n                        ))\n                    ) : (\n                        <>\n\n                        </>\n                    )\n                    }\n                    </Card.Group>\n                </Grid.Column>\n\n                </Grid>\n            </Segment>\n        </Container>\n    )\n})\n\nexport default Bilatzailea;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>  \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios'\nimport secrets from './secrets.json';\n\nconst TwitchAPI = axios.create({\n    baseURL: 'https://api.twitch.tv/helix/',\n    headers: {\n        'client-id': secrets.client_id,\n        'Authorization': \"Bearer \" + secrets.token\n    }\n})\n\nexport const GetZuzenekoak = async(twitzlariList)  => {\n   const response = await TwitchAPI.get('streams?user_login=' + twitzlariList.join('&user_login='));\n    return response.data.data;\n};\n  \n\nexport const GetErabiltzailearenBideoak = async(id)=>{\n    const response = await TwitchAPI.get('videos?user_id=' + id);\n    return response.data.data\n};\n\n//   TwitchAPI.get('videos?user_id=' + user.id).then((response) => {\n//     response.data.data.map( (bideoa) => {\n//         new Date(bideoa.created_at)>atzeraData && (azkenBideo = [...azkenBideo, bideoa])\n//     })\n//     setBideoak(azkenBideo)\n// })\n\nexport const GetErabiltzailearenKlipak = async(id)  => {\n    const response = await TwitchAPI.get('clips?broadcaster_id=' + id);\n    return response.data.data;\n};\nexport default TwitchAPI;"],"sourceRoot":""}