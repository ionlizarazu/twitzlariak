{"version":3,"sources":["api.js","TwitzlariaCard.js","Bilatzailea.js","Erabiltzailea.jsx","cards/ZuzenekoaCard.js","cards/ClipCard.jsx","Portada.js","App.js","reportWebVitals.js","index.js"],"names":["TwitchAPI","axios","create","baseURL","headers","secrets","client_id","Authorization","token","GetZuzenekoak","twitzlariList","a","get","join","response","data","GetErabiltzailearenBideoak","id","GetErabiltzailearenKlipak","gaur","Date","atzeraData","setDate","getDate","filter","clip","created_at","GetErabiltzaileak","users","TwitzlariaCard","title","meta","description","image_url","zuzenean","Card","Content","Image","floated","size","src","Header","Icon","circular","inverted","color","name","Meta","Description","className","Bilatzailea","props","useState","setUsers","options","setOptions","userList","setUserList","bideoak","setBideoak","klipak","setKlipak","selectedUser","setSelectedUser","twitzlariak","map","twitzlaria","key","text","value","getErabiltzailearenBideoak","user_id","getErabiltzailearenKlipak","user","display_name","azkenBideoak","azkenKlipak","bideoa","klipa","useEffect","length","then","fetchData","Container","Dropdown","placeholder","fluid","multiple","selection","search","allowAdditions","onAddItem","event","onChange","e","Segment","Grid","columns","divided","Column","width","index","onClick","handleClick","view_count","profile_image_url","as","Group","thumbnail_url","replace","Link","to","pathname","url","target","moment","format","setUser","console","log","getErabiltzaileak","match","params","wrapped","ui","extra","ZuzenekoaCard","erabiltzailea","href","user_login","rel","Label","ribbon","user_name","game_name","viewer_count","ClipCard","attached","broadcaster_name","Row","creator_name","type","role","Popup","content","hideOnScroll","basic","position","on","trigger","navigator","clipboard","writeText","Portada","slice","paginationKlipak","setPaginationKlipak","paginationOrria","setPaginationOrria","zuzenekoak","setZuzenekoak","getZuzenekoak","sort","property","sortOrder","substr","b","dynamicSort","prevState","itemsPerRow","stackable","icon","Pagination","boundaryRange","defaultActivePage","showEllipsis","activePage","onPageChange","totalPages","Math","round","App","basename","Menu","Item","exact","path","component","Erabiltzailea","vertical","style","margin","padding","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c360fed.chunk.js","sourcesContent":["import axios from 'axios';\nimport secrets from './secrets.json';\n\nconst TwitchAPI = axios.create({\n  baseURL: 'https://api.twitch.tv/helix/',\n  headers: {\n    'client-id': secrets.client_id,\n    Authorization: 'Bearer ' + secrets.token,\n  },\n});\n\nexport const GetZuzenekoak = async (twitzlariList) => {\n  const response = await TwitchAPI.get(\n    'streams?user_login=' + twitzlariList.join('&user_login='),\n  );\n  return response.data.data;\n};\n\nexport const GetErabiltzailearenBideoak = async (id) => {\n  const response = await TwitchAPI.get('videos?user_id=' + id);\n  return response.data.data;\n};\n\n//   TwitchAPI.get('videos?user_id=' + user.id).then((response) => {\n//     response.data.data.map( (bideoa) => {\n//         new Date(bideoa.created_at)>atzeraData && (azkenBideo = [...azkenBideo, bideoa])\n//     })\n//     setBideoak(azkenBideo)\n// })\n\nexport const GetErabiltzailearenKlipak = async (id) => {\n  const response = await TwitchAPI.get(\n    'clips?broadcaster_id=' + id + '&first=100',\n  );\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 40);\n  return response.data.data.filter(\n    (clip) => new Date(clip.created_at) > atzeraData,\n  );\n};\n\nexport const GetErabiltzaileak = async (users) => {\n  const response = await TwitchAPI.get('users?login=' + users.join('&login='));\n  return response.data.data;\n};\nexport default TwitchAPI;\n","import React, { useState, useEffect } from 'react';\n\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport './twitzlariakCard.css';\n\nimport api from './api.js';\n\nconst TwitzlariaCard = ({\n  title,\n  meta,\n  description,\n  image_url,\n  zuzenean = false,\n}) => {\n  return (\n    <>\n      <Card.Content>\n        <Image\n          floated=\"left\"\n          size=\"tiny\"\n          src={\n            image_url ||\n            'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'\n          }\n        />\n        <Card.Header>\n          {zuzenean && (\n            <Icon circular inverted size=\"tiny\" color=\"red\" name=\"record\" />\n          )}\n          {title || 'Twitzlaria'}\n        </Card.Header>\n        <Card.Meta>{meta ? meta + ' ikustaldi' : '0 ikustaldi'}</Card.Meta>\n        <Card.Description className=\"ellipsis\">\n          {description ||\n            'twitzlariaren deskribapena hemen idatzita agertuko da'}\n        </Card.Description>\n      </Card.Content>\n    </>\n  );\n};\n\nexport default TwitzlariaCard;\n","import {\n  Card,\n  Container,\n  Dropdown,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react';\nimport React, { useEffect, useState } from 'react';\nimport TwitchAPI, {\n  GetErabiltzailearenBideoak,\n  GetErabiltzailearenKlipak,\n} from './api.js';\n\nimport { Link } from 'react-router-dom';\nimport TwitzlariaCard from './TwitzlariaCard';\nimport moment from 'moment';\nimport twitzlariak from './twitzlariak.json';\n\nconst Bilatzailea = (props) => {\n  const [users, setUsers] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [bideoak, setBideoak] = useState([]);\n  const [klipak, setKlipak] = useState([]);\n  const [selectedUser, setSelectedUser] = useState([]);\n  // const [atzeraData, setAtzeraData] = useState(new Date())\n  const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria) => {\n    return { key: twitzlaria, text: twitzlaria, value: twitzlaria };\n  });\n\n  const getErabiltzailearenBideoak = async (user_id) => {\n    return await GetErabiltzailearenBideoak(user_id);\n  };\n  const getErabiltzailearenKlipak = async (user_id) => {\n    return await GetErabiltzailearenKlipak(user_id);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      userList.length > 0 &&\n        TwitchAPI.get(\n          'users?login=' + userList.join('&login='),\n        ).then((response) => setUsers(response.data.data));\n    };\n    fetchData();\n  }, [userList]);\n\n  useEffect(() => {\n    setOptions(twitzlariList);\n    setSelectedUser('');\n  }, []);\n\n  function handleChange(e, { value }) {\n    setUserList(value);\n    setBideoak([]);\n    setKlipak([]);\n  }\n\n  async function handleClick(user) {\n    if (user) {\n      setSelectedUser(user.display_name);\n      setBideoak([]);\n      setKlipak([]);\n      let azkenBideoak = [];\n      let azkenKlipak = [];\n      await (await getErabiltzailearenBideoak(user.id)).map((bideoa) => {\n        azkenBideoak = [...azkenBideoak, bideoa];\n      });\n      setBideoak(azkenBideoak);\n\n      await (await getErabiltzailearenKlipak(user.id)).map((klipa) => {\n        azkenKlipak = [...azkenKlipak, klipa];\n      });\n      setKlipak(azkenKlipak);\n    }\n  }\n\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 7);\n\n  return (\n    <Container>\n      <Dropdown\n        placeholder=\"Erabiltzaileak\"\n        fluid\n        multiple\n        selection\n        search\n        allowAdditions\n        onAddItem={(event, data) =>\n          setOptions([\n            ...options,\n            { key: data.value, text: data.value, value: data.value },\n          ])\n        }\n        options={options}\n        onChange={handleChange}\n      />\n      <Segment>\n        <Grid columns={2} divided>\n          <Grid.Column width={5}>\n            {users.length > 0 ? (\n              users.map((user, index) => (\n                <Card\n                  className={selectedUser === user.display_name ? 'active' : ''}\n                  onClick={() => handleClick(user)}\n                >\n                  <TwitzlariaCard\n                    title={user.display_name}\n                    meta={user.view_count}\n                    description={user.description}\n                    image_url={user.profile_image_url}\n                    key={index}\n                  />\n                </Card>\n              ))\n            ) : (\n              <Card>\n                <TwitzlariaCard />\n              </Card>\n            )}\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon size=\"tiny\" name=\"video camera\" />\n                <Header.Content>Bideoak</Header.Content>\n              </Header>\n            </Segment>\n            <Card.Group>\n              {bideoak.length > 0 ? (\n                bideoak.map((bideoa, index) => (\n                  <Card>\n                    <Image\n                      src={bideoa.thumbnail_url\n                        .replace('%{width}', 440)\n                        .replace('%{height}', 228)}\n                    />\n                    <Card.Content>\n                      <Card.Header\n                        as={Link}\n                        to={{ pathname: bideoa.url }}\n                        target=\"_blank\"\n                      >\n                        {bideoa.title}\n                      </Card.Header>\n                      <Card.Description as=\"a\">\n                        {moment(bideoa.created_at).format('YYYY/MM/DD HH:MM')}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))\n              ) : (\n                <>Ez dago bideorik...</>\n              )}\n            </Card.Group>\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon size=\"tiny\" name=\"paperclip\" />\n                <Header.Content>klipak</Header.Content>\n              </Header>\n            </Segment>\n            <Card.Group>\n              {klipak.length > 0 ? (\n                klipak.map((clip, index) => (\n                  <Card>\n                    <Image\n                      src={clip.thumbnail_url\n                        .replace('%{width}', 440)\n                        .replace('%{height}', 228)}\n                    />\n                    <Card.Content>\n                      <Card.Header as={Link} to={{ pathname: clip.url }}>\n                        {clip.title}\n                      </Card.Header>\n                      <Card.Description as=\"a\">\n                        {moment(clip.created_at).format('YYYY/MM/DD HH:MM')}\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))\n              ) : (\n                <>Ez dago klipik...</>\n              )}\n            </Card.Group>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Bilatzailea;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Grid,\n  Header,\n  Image,\n  Menu,\n  Segment,\n  Card,\n  Icon,\n} from 'semantic-ui-react';\nimport { GetErabiltzaileak } from './api.js';\nimport moment from 'moment';\n\nconst Bilatzailea = (props) => {\n  const [user, setUser] = useState();\n  console.log(user);\n  const getErabiltzaileak = async (users) => {\n    return await GetErabiltzaileak(users);\n  };\n  useEffect(() => {\n    getErabiltzaileak([props.match.params.user]).then((response) => {\n      setUser(response[0]);\n    });\n  }, []);\n  return (\n    <Container>\n      <Header as=\"h1\">{props.match.params.user}</Header>\n      <Card>\n        <Image\n          src={user?.profile_image_url\n            ?.replace('%{width}', 440)\n            .replace('%{height}', 228)}\n          wrapped\n          ui={false}\n        />\n        <Card.Content>\n          <Card.Header>{user?.display_name}</Card.Header>\n          <Card.Meta>\n            <span className=\"date\">\n              {moment(user?.created_at).format('YYYY/MM/DD')}\n            </span>\n          </Card.Meta>\n          <Card.Description>{user?.description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name=\"eye\" />\n          {user?.view_count} ikustaldi\n        </Card.Content>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Bilatzailea;\n","import { Card, Image, Label, Icon } from 'semantic-ui-react';\n\nimport React from 'react';\n\n// import './twitzlariakCard.css'\n\nconst ZuzenekoaCard = ({ erabiltzailea }) => {\n  return (\n    <Card>\n      <a\n        href={'https://www.twitch.tv/' + erabiltzailea?.user_login}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Image\n          src={\n            erabiltzailea?.thumbnail_url\n              .replace('{width}', 440)\n              .replace('{height}', 228) ||\n            'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'\n          }\n        />\n      </a>\n      <Card.Content>\n        <Label color=\"red\" ribbon=\"right\">\n          Zuzenean\n        </Label>\n        <Card.Header>\n          <a\n            href={'https://www.twitch.tv/' + erabiltzailea?.user_login}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {erabiltzailea?.user_name || 'Twitzlaria'}\n          </a>\n        </Card.Header>\n        <Card.Meta>{erabiltzailea?.game_name || 'Jokoaren izena'}</Card.Meta>\n        <Card.Description>\n          {erabiltzailea?.title ||\n            'twitzlariaren deskribapena hemen idatzita agertuko da'}\n          <div>\n            <Icon name=\"eye\" />\n            {erabiltzailea.viewer_count} ikusle\n          </div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ZuzenekoaCard;\n","import { Card, Image, Label, Icon, Grid, Popup } from 'semantic-ui-react';\n\nimport React from 'react';\nimport moment from 'moment';\n\nconst ClipCard = ({ clip }) => {\n  return (\n    <Card>\n      <Card.Content>\n        <Label attached=\"top left\" color=\"violet\">\n          {clip.broadcaster_name}\n        </Label>\n        <Card.Header>{clip.title}</Card.Header>\n      </Card.Content>\n      <a href={clip.url} target=\"_blank\" rel=\"noreferrer\">\n        <Image\n          src={clip.thumbnail_url\n            .replace('%{width}', 440)\n            .replace('%{height}', 228)}\n        />\n      </a>\n      <Card.Content extra>\n        <Grid divided=\"vertically\">\n          <Grid.Row columns={2}>\n            <Grid.Column>\n              <div>\n                <Icon name=\"eye\" />\n                {clip.view_count} ikustaldi\n              </div>\n              <div>\n                <Icon name=\"clock\" />\n                {moment(clip.created_at).format('YYYY/MM/DD')}\n              </div>\n              <div>\n                <Icon name=\"paperclip\" />\n                {clip.creator_name}\n              </div>\n            </Grid.Column>\n            <Grid.Column>\n              <a\n                type=\"button\"\n                role=\"button\"\n                title=\"Share on twitter\"\n                target={'_blank'}\n                rel=\"noreferrer\"\n                href={\n                  'https://twitter.com/intent/tweet?url=' +\n                  '[#' +\n                  clip.broadcaster_name +\n                  ']' +\n                  '%0A' +\n                  clip.title +\n                  '%0A%0A' +\n                  clip.url\n                }\n              >\n                <Icon name=\"twitter\" color=\"blue\" size=\"big\" />\n              </a>\n              <Popup\n                content=\"Arbelean kopiatu da zure sareetan partekatzeko!\"\n                hideOnScroll\n                basic\n                inverted\n                position=\"top center\"\n                on=\"click\"\n                trigger={\n                  <Icon\n                    name=\"copy\"\n                    size=\"big\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        '[' +\n                          clip.broadcaster_name +\n                          ']' +\n                          '\\n' +\n                          clip.title +\n                          '\\n\\n' +\n                          clip.url,\n                      );\n                    }}\n                  />\n                }\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ClipCard;\n","import './portada.css';\n\nimport {\n  Card,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Label,\n  Pagination,\n  Popup,\n  Segment,\n} from 'semantic-ui-react';\nimport {\n  GetErabiltzaileak,\n  GetErabiltzailearenKlipak,\n  GetZuzenekoak,\n} from './api.js';\nimport React, { useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport ZuzenekoaCard from './cards/ZuzenekoaCard';\nimport ClipCard from './cards/ClipCard';\nimport moment from 'moment';\nimport twitzlariak from './twitzlariak.json';\n\nconst Portada = (props) => {\n  const [klipak, setKlipak] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [paginationKlipak, setPaginationKlipak] = useState(klipak.slice(0, 12));\n  const [paginationOrria, setPaginationOrria] = useState(1);\n  const [zuzenekoak, setZuzenekoak] = useState([]);\n  const getZuzenekoak = async () =>\n    setZuzenekoak(await GetZuzenekoak(twitzlariList));\n  useEffect(() => {\n    getZuzenekoak();\n  }, []);\n  const twitzlariList = twitzlariak.twitzlariak;\n  let gaur = new Date();\n  let atzeraData = new Date();\n  atzeraData.setDate(gaur.getDate() - 20);\n  function dynamicSort(property) {\n    var sortOrder = 1;\n    if (property[0] === '-') {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return function (a, b) {\n      /* next line works with strings and numbers,\n       * and you may want to customize it to your needs\n       */\n      var result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  }\n\n  const getErabiltzailearenKlipak = async (user_id) => {\n    return await GetErabiltzailearenKlipak(user_id);\n  };\n  const getErabiltzaileak = async (users) => {\n    return await GetErabiltzaileak(users);\n  };\n\n  useEffect(() => {\n    getErabiltzaileak(twitzlariList).then((response) => {\n      setUsers(response);\n    });\n  }, []);\n\n  useEffect(() => {\n    setPaginationKlipak(\n      klipak\n        .sort(dynamicSort('-created_at'))\n        .slice((paginationOrria - 1) * 12, (paginationOrria - 1) * 12 + 12),\n    );\n  }, [klipak, paginationOrria]);\n\n  useEffect(() => {\n    if (users.length > 0) {\n      users.map((user) => {\n        getErabiltzailearenKlipak(user.id).then((response) => {\n          response.map((klipa) => {\n            setKlipak((prevState) => [...prevState, klipa]);\n          });\n        });\n      });\n    }\n  }, [users]);\n\n  const handlePaginationChange = (e, { activePage }) =>\n    setPaginationOrria(activePage);\n\n  return (\n    <Container>\n      <h1>Hasierako orria</h1>\n      <div className=\"pulsating-circle\"></div>\n      <h2 className=\"pulsating-circle\">Orain zuzenean</h2>\n      {zuzenekoak.length > 0 ? (\n        <Card.Group itemsPerRow={3} stackable>\n          {zuzenekoak.map((erabiltzailea, index) => (\n            <ZuzenekoaCard erabiltzailea={erabiltzailea} />\n          ))}\n        </Card.Group>\n      ) : (\n        <Segment placeholder>\n          <Header icon>\n            <Icon name=\"history\" />\n            Orain momentuan ez dago inor zuzenean.\n          </Header>\n        </Segment>\n      )}\n      <hr />\n      <h2>Azken 40 egunetako klipak</h2>\n      <Segment>\n        <h3>Klipari ekinenak:</h3>\n      </Segment>\n      <Card.Group itemsPerRow={4} stackable>\n        {paginationKlipak.map((clip) => (\n          <ClipCard clip={clip} />\n        ))}\n      </Card.Group>\n      <Segment>\n        <Pagination\n          boundaryRange={1}\n          defaultActivePage={1}\n          showEllipsis={true}\n          activePage={paginationOrria}\n          onPageChange={handlePaginationChange}\n          totalPages={Math.round(klipak.length / 12)}\n        />\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Portada;\n","import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {\n  Container,\n  Grid,\n  Header,\n  Image,\n  Menu,\n  Segment,\n} from 'semantic-ui-react';\nimport { Link, Route, HashRouter as Router, Switch } from 'react-router-dom';\n\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport Bilatzailea from './Bilatzailea';\nimport Erabiltzailea from './Erabiltzailea';\nimport Portada from './Portada';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Router basename={'/'}>\n      <Menu inverted>\n        <Container>\n          <Menu.Item as={Link} to=\"/\">\n            Hasierako orria\n          </Menu.Item>\n          <Menu.Item as={Link} to=\"/bilatzailea\">\n            Bilatzailea\n          </Menu.Item>\n        </Container>\n      </Menu>\n      <Switch>\n        <Route exact path=\"/\">\n          <Portada />\n        </Route>\n        <Route exact path=\"/bilatzailea\">\n          <Bilatzailea />\n        </Route>\n        <Route exact path=\"/gutarrak/:user\" component={Erabiltzailea}></Route>\n      </Switch>\n      <Segment\n        inverted\n        vertical\n        style={{ margin: '5em 0em 0em', padding: '5em 0em' }}\n      >\n        <Container textAlign=\"center\">\n          <Grid divided inverted stackable>\n            <Grid.Column width={8}>\n              <Header inverted as=\"h4\" content=\"Footer Header\" />\n              <p>\n                Extra space for a call to action inside the footer that could\n                help re-engage users.\n              </p>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Header inverted as=\"h4\" content=\"Footer Header\" />\n              <p>\n                Extra space for a call to action inside the footer that could\n                help re-engage users.\n              </p>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Segment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}