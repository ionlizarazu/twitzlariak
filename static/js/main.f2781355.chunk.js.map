{"version":3,"sources":["App.js","Portada.js","ZuzenekoaCard.js","Zuzenean.js","TwitzlariaCard.js","Bilatzailea.js","reportWebVitals.js","index.js","api.js"],"names":["App","console","log","process","basename","inverted","Item","as","Link","to","header","circular","size","color","name","exact","path","Portada","props","useState","klipak","setKlipak","users","setUsers","twitzlariList","twitzlariak","gaur","Date","setDate","getDate","getErabiltzailearenKlipak","user_id","a","GetErabiltzailearenKlipak","getErabiltzaileak","GetErabiltzaileak","useEffect","then","response","length","map","user","id","klipa","prevState","Group","sort","property","sortOrder","substr","b","dynamicSort","clip","src","thumbnail_url","replace","Content","href","url","target","Header","title","Description","moment","created_at","format","ZuzenekoaCard","erabiltzailea","user_login","rel","Card","Image","Label","ribbon","user_name","Meta","game_name","Zuzenean","zuzenekoak","setZuzenekoak","twitzlaria","getZuzenekoak","GetZuzenekoak","Container","style","margin","Segment","index","TwitzlariaCard","meta","description","image_url","zuzenean","floated","Icon","className","Bilatzailea","options","setOptions","userList","setUserList","bideoak","setBideoak","selectedUser","setSelectedUser","key","text","value","getErabiltzailearenBideoak","GetErabiltzailearenBideoak","display_name","azkenBideoak","azkenKlipak","bideoa","TwitchAPI","get","join","data","fetchData","atzeraData","Dropdown","placeholder","fluid","multiple","selection","search","allowAdditions","onAddItem","event","onChange","e","Grid","columns","divided","Column","width","onClick","handleClick","view_count","profile_image_url","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","create","baseURL","headers","secrets","client_id","token","filter"],"mappings":"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","file":"static/js/main.f2781355.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Menu, Icon } from 'semantic-ui-react';\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport Bilatzailea from './Bilatzailea';\nimport Zuzenean from './Zuzenean';\nimport Portada from './Portada';\nfunction App() {\n  console.log(\"PROCESS: \", process)\n  return (\n    <Router basename={'/'}>\n      <Menu inverted>\n        <Container>\n        <Menu.Item as={Link} to='/'>\n            Hasierako orria\n          </Menu.Item>\n          <Menu.Item as={Link} to='/bilatzailea'>\n            Bilatzailea\n          </Menu.Item>\n          <Menu.Item as={Link} to='/zuzenean' header>\n            <Icon circular inverted size='tiny' color='red' name='record' />\n              Zuzenean\n          </Menu.Item>\n        </Container>\n      </Menu>\n      <Switch>\n        <Route exact path=\"/\">\n          <Portada />\n        </Route>\n        <Route exact path=\"/bilatzailea\">\n          <Bilatzailea />\n        </Route>\n        <Route exact path=\"/zuzenean\">\n          <Zuzenean />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Segment,\n  Grid,\n  Card,\n  Image,\n  Dropdown,\n  Header,\n  Icon,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport twitzlariak from \"./twitzlariak.json\";\nimport TwitchAPI, {\n  GetErabiltzailearenBideoak,\n  GetErabiltzailearenKlipak,\n  GetErabiltzaileak,\n} from \"./api.js\";\nimport moment from \"moment\";\n\nconst Portada = ((props) => {\n    const [klipak, setKlipak] = useState([]);\n    const [users, setUsers] = useState([]);\n    const twitzlariList = twitzlariak.twitzlariak;\n    let gaur = new Date()\n    let atzeraData = new Date()\n    atzeraData.setDate(gaur.getDate()-20)\n    function dynamicSort(property) {\n      var sortOrder = 1;\n      if (property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n      }\n      return function (a, b) {\n        /* next line works with strings and numbers,\n         * and you may want to customize it to your needs\n         */\n        var result =\n          a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n        return result * sortOrder;\n      };\n    }\n\n    const getErabiltzailearenKlipak = async (user_id) => {\n      return await GetErabiltzailearenKlipak(user_id);\n    };\n    const getErabiltzaileak = async (users) => {\n      return await GetErabiltzaileak(users);\n    };\n\n    useEffect(() => {\n        getErabiltzaileak(twitzlariList).then((response) => {\n            setUsers(response);\n        });\n    }, []);\n    \n    useEffect(() => {\n        if (users.length > 0) {\n            users.map((user) => {\n                getErabiltzailearenKlipak(user.id).then((response) => {\n                    response.map((klipa) => {\n                        setKlipak((prevState) => [...prevState, klipa]);\n                    });\n                });\n            });\n        }\n    }, [users]);\n\n    return (\n      <Container>\n        <h1>Hasierako orria</h1>\n        <h2>Klipak</h2>\n        <Card.Group>\n          {klipak.sort(dynamicSort(\"-created_at\")).map((clip) => (\n            <Card>\n              <Image\n                src={clip.thumbnail_url\n                  .replace(\"%{width}\", 440)\n                  .replace(\"%{height}\", 228)}\n              />\n                  <Card.Content>\n                      <a href={clip.url} target=\"_blank\">\n                <Card.Header\n                >\n                  {clip.title}\n                </Card.Header>\n                          </a>\n                <Card.Description as=\"a\">\n                  {moment(clip.created_at).format(\"YYYY/MM/DD HH:MM\")}\n                          </Card.Description>\n              </Card.Content>\n            </Card>\n          ))}\n        </Card.Group>\n      </Container>\n    ); \n});\n\nexport default Portada;","import React from 'react';\n\nimport { Card, Image, Label } from 'semantic-ui-react';\n// import './twitzlariakCard.css'\n\nconst ZuzenekoaCard = ( ({ erabiltzailea }) => {\n\n  return (\n   <>\n    <a href={'https://www.twitch.tv/'+erabiltzailea?.user_login} target=\"_blank\" rel=\"noreferrer\">\n        <Card>\n            <Image\n                src={erabiltzailea?.thumbnail_url.replace('{width}', 440).replace('{height}', 228) || 'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n            />\n            <Card.Content>\n                <Label color='red' ribbon='right'>\n                    Zuzenean\n                </Label>\n                <Card.Header>\n                    {erabiltzailea?.user_name || 'Twitzlaria'}\n                </Card.Header>\n                <Card.Meta>{erabiltzailea?.game_name}</Card.Meta>\n                <Card.Description>\n                    {erabiltzailea?.title || 'twitzlariaren deskribapena hemen idatzita agertuko da'}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    </a>\n  </>\n  )\n});\n\n\nexport default ZuzenekoaCard;","import React, { useState, useEffect } from 'react';\n\nimport ZuzenekoaCard from './ZuzenekoaCard';\nimport { Container, Menu, Icon, Segment, Grid, Card, Image, Dropdown, Label } from 'semantic-ui-react';\nimport { GetZuzenekoak } from './api.js';\nimport twitzlariak from './twitzlariak.json';\n\n\nconst Zuzenean = ((props) => {\n    const [zuzenekoak, setZuzenekoak] = useState([])\n    const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria)=>{return twitzlaria})\n    const getZuzenekoak = async() => setZuzenekoak(await GetZuzenekoak(twitzlariList));\n    useEffect(()=>{\n       getZuzenekoak();\n    },[])\n    return (\n        <Container style={{ margin: 20 }}>\n            <Segment>\n                <Card.Group>\n                    {zuzenekoak.length > 0 ? (\n                        zuzenekoak.map((erabiltzailea, index) => (\n                            <ZuzenekoaCard erabiltzailea={erabiltzailea} />\n                        ))\n                    ) : (\n                        <ZuzenekoaCard />\n                    )}\n                </Card.Group>\n            </Segment>\n        </Container>\n    )\n\n})\n\nexport default Zuzenean;","import React, { useState, useEffect } from 'react';\n\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport './twitzlariakCard.css'\n\nimport api from './api.js';\n\nconst TwitzlariaCard = (({ title, meta, description, image_url, zuzenean=false }) => {\n\n  return (\n   <>\n    <Card.Content>\n      <Image\n        floated='left'\n        size='tiny'\n        src={image_url || 'https://www.pngitem.com/pimgs/m/421-4212617_person-placeholder-image-transparent-hd-png-download.png'}\n      />\n      <Card.Header>\n        {zuzenean && <Icon circular inverted size='tiny' color='red' name='record' />}\n        {title || 'Twitzlaria'}\n      </Card.Header>\n      <Card.Meta>{meta ? (meta + ' ikustaldi') : '0 ikustaldi'}</Card.Meta>\n      <Card.Description className=\"ellipsis\">\n        {description || 'twitzlariaren deskribapena hemen idatzita agertuko da'}\n      </Card.Description>\n      </Card.Content>\n  </>\n  )\n})\n\n\nexport default TwitzlariaCard;","import React, { useState, useEffect } from 'react';\n\nimport TwitchAPI, {GetErabiltzailearenBideoak, GetErabiltzailearenKlipak} from './api.js';\nimport { Container, Segment, Grid, Card, Image, Dropdown, Header, Icon } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport TwitzlariaCard from './TwitzlariaCard';\nimport twitzlariak from './twitzlariak.json';\nimport moment from \"moment\";\n\nconst Bilatzailea = ((props) => {\n    const [users, setUsers] = useState([])\n    const [options, setOptions] = useState([])\n    const [userList, setUserList] = useState([])\n    const [bideoak, setBideoak] = useState([])\n    const [klipak, setKlipak] = useState([])\n    const [selectedUser, setSelectedUser] = useState([])\n    // const [atzeraData, setAtzeraData] = useState(new Date())\n    const twitzlariList = twitzlariak.twitzlariak.map((twitzlaria)=>{return {key: twitzlaria, text: twitzlaria, value: twitzlaria}})\n    \n    const getErabiltzailearenBideoak = async (user_id)=> {return await GetErabiltzailearenBideoak(user_id)};\n    const getErabiltzailearenKlipak = async(user_id) => {return await GetErabiltzailearenKlipak(user_id)};\n    \n    useEffect(() => {\n      const fetchData = async () => {\n        userList.length > 0 && (\n          TwitchAPI.get('users?login=' + userList.join('&login=')).then((response) => (\n            setUsers(response.data.data)\n          ))\n        )\n      }\n      fetchData()\n    }, [userList])\n\n    useEffect(() => {\n        setOptions(twitzlariList)\n        setSelectedUser('')\n    }, [])\n  \n    function handleChange(e, { value }) {\n      setUserList(value)\n      setBideoak([])\n      setKlipak([])\n    }\n  \n    async function handleClick(user) {\n      if (user) {\n        setSelectedUser(user.display_name)\n        setBideoak([])\n        setKlipak([])\n        let azkenBideoak = []\n        let azkenKlipak = []\n        await (await getErabiltzailearenBideoak(user.id)).map((bideoa) => {\n            azkenBideoak = [...azkenBideoak, bideoa]\n        });\n        setBideoak(azkenBideoak)\n        \n        await (await getErabiltzailearenKlipak(user.id)).map((klipa) => {\n            azkenKlipak = [...azkenKlipak, klipa]\n        });\n        setKlipak(azkenKlipak);\n      }\n    };\n\n    let gaur = new Date()\n    let atzeraData = new Date()\n    atzeraData.setDate(gaur.getDate()-7)\n    \n    return(\n        <Container>\n            <Dropdown placeholder='Erabiltzaileak' fluid multiple selection search allowAdditions\n                onAddItem={(event, data) => setOptions([...options,\n                { key: data.value, text: data.value, value: data.value }])}\n                options={options}\n                onChange={handleChange} />\n            <Segment>\n                <Grid columns={2} divided>\n                <Grid.Column width={5}>\n                    {users.length > 0 ? (\n                    users.map((user, index) => (\n                        <Card className={selectedUser === user.display_name ? 'active': ''} onClick={() => handleClick(user)}>\n                        <TwitzlariaCard \n                            title={user.display_name} \n                            meta={user.view_count} \n                            description={user.description} \n                            image_url={user.profile_image_url} \n                            key={index} />\n                        </Card>\n                    ))\n                    ) : (\n                    <Card>\n                        <TwitzlariaCard />\n                    </Card>\n                    )\n                    }\n                </Grid.Column>\n                <Grid.Column width={5}>\n                {bideoak.length > 0 && \n                    <Segment>\n                        <Header as='h2'>\n                            <Icon  size='tiny' name='video camera' />\n                            <Header.Content>Bideoak</Header.Content>\n                        </Header>\n                    </Segment>\n                }\n                    <Card.Group>\n                    {bideoak.length > 0 ? (\n                        bideoak.map((bideoa, index) => (\n                            <>\n                        {new Date(bideoa.created_at)>atzeraData && \n                            <Card>\n                            <Image src={bideoa.thumbnail_url.replace('%{width}', 440).replace('%{height}', 228)} />\n                                        <Card.Content>\n                                            <a href=\"bideoa.url\"></a>\n                                <Card.Header as={Link} to={{ pathname: bideoa.url }} target='_blank'>{bideoa.title}</Card.Header>\n                                <Card.Description as='a'>{moment(bideoa.created_at).format('YYYY/MM/DD HH:MM')}</Card.Description>\n                            </Card.Content>\n                            </Card>\n                        }\n                        </>\n                        ))\n                    ) : (\n                        <>\n                        </>\n                    )\n                    }\n                    </Card.Group>\n                </Grid.Column>\n                <Grid.Column width={5}>\n                    {klipak.length > 0 && \n                    <Segment>\n                        <Header as='h2'>\n                            <Icon  size='tiny' name='paperclip' />\n                            <Header.Content>klipak</Header.Content>\n                        </Header>\n                    </Segment>\n                    }\n                    <Card.Group>\n                    {klipak.length > 0 ? (\n                        klipak.map((clip, index) => (\n                            <Card>\n                            <Image src={clip.thumbnail_url.replace('%{width}', 440).replace('%{height}', 228)} />\n                            <Card.Content>\n                                <Card.Header as={Link} to={{ pathname: clip.url }}>{clip.title}</Card.Header>\n                                <Card.Description as='a'>{moment(clip.created_at).format('YYYY/MM/DD HH:MM')}</Card.Description>\n                            </Card.Content>\n                            </Card>\n                        ))\n                    ) : (\n                        <>\n                        </>\n                    )\n                    }\n                    </Card.Group>\n                </Grid.Column>\n\n                </Grid>\n            </Segment>\n        </Container>\n    )\n})\n\nexport default Bilatzailea;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>  \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios'\nimport secrets from './secrets.json';\n\nconst TwitchAPI = axios.create({\n    baseURL: 'https://api.twitch.tv/helix/',\n    headers: {\n        'client-id': secrets.client_id,\n        'Authorization': \"Bearer \" + secrets.token\n    }\n})\n\nexport const GetZuzenekoak = async(twitzlariList)  => {\n   const response = await TwitchAPI.get('streams?user_login=' + twitzlariList.join('&user_login='));\n    return response.data.data;\n};\n  \n\nexport const GetErabiltzailearenBideoak = async(id)=>{\n    const response = await TwitchAPI.get('videos?user_id=' + id);\n    return response.data.data\n};\n\n//   TwitchAPI.get('videos?user_id=' + user.id).then((response) => {\n//     response.data.data.map( (bideoa) => {\n//         new Date(bideoa.created_at)>atzeraData && (azkenBideo = [...azkenBideo, bideoa])\n//     })\n//     setBideoak(azkenBideo)\n// })\n\nexport const GetErabiltzailearenKlipak = async(id)  => {\n    const response = await TwitchAPI.get('clips?broadcaster_id=' + id + '&first=100');\n    let gaur = new Date();\n    let atzeraData = new Date();\n    atzeraData.setDate(gaur.getDate() - 40);\n    return response.data.data.filter(\n      (clip) => new Date(clip.created_at) > atzeraData\n    );\n};\n\nexport const GetErabiltzaileak = async (users) => {\n    const response = await TwitchAPI.get(\"users?login=\" + users.join(\"&login=\"))\n    return response.data.data;\n};\nexport default TwitchAPI;"],"sourceRoot":""}